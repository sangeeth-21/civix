/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/auth/[...nextauth]/route";
exports.ids = ["app/api/auth/[...nextauth]/route"];
exports.modules = {

/***/ "(rsc)/./app/api/auth/[...nextauth]/route.ts":
/*!*********************************************!*\
  !*** ./app/api/auth/[...nextauth]/route.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST),\n/* harmony export */   dynamic: () => (/* binding */ dynamic),\n/* harmony export */   runtime: () => (/* binding */ runtime)\n/* harmony export */ });\n/* harmony import */ var _auth__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/auth */ \"(rsc)/./auth.ts\");\n\nconst { GET, POST } = _auth__WEBPACK_IMPORTED_MODULE_0__.handlers;\n// Set runtime to nodejs for MongoDB compatibility\nconst runtime = \"nodejs\";\n// Add dynamic config for production and local environments\nconst dynamic = \"force-dynamic\"; // Don't cache auth responses \n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9hcHAvYXBpL2F1dGgvWy4uLm5leHRhdXRoXS9yb3V0ZS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFrQztBQUUzQixNQUFNLEVBQUVDLEdBQUcsRUFBRUMsSUFBSSxFQUFFLEdBQUdGLDJDQUFRQSxDQUFDO0FBRXRDLGtEQUFrRDtBQUMzQyxNQUFNRyxVQUFVLFNBQVM7QUFFaEMsMkRBQTJEO0FBQ3BELE1BQU1DLFVBQVUsZ0JBQWdCLENBQUMsOEJBQThCIiwic291cmNlcyI6WyIvVXNlcnMvbWFjYm9vay9EZXNrdG9wL3BlcnNvbmFsLXdvcmtzcGFjZS9jaXZpeC1zcWwvYXBwL2FwaS9hdXRoL1suLi5uZXh0YXV0aF0vcm91dGUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaGFuZGxlcnMgfSBmcm9tIFwiQC9hdXRoXCI7XG5cbmV4cG9ydCBjb25zdCB7IEdFVCwgUE9TVCB9ID0gaGFuZGxlcnM7XG5cbi8vIFNldCBydW50aW1lIHRvIG5vZGVqcyBmb3IgTW9uZ29EQiBjb21wYXRpYmlsaXR5XG5leHBvcnQgY29uc3QgcnVudGltZSA9IFwibm9kZWpzXCI7XG5cbi8vIEFkZCBkeW5hbWljIGNvbmZpZyBmb3IgcHJvZHVjdGlvbiBhbmQgbG9jYWwgZW52aXJvbm1lbnRzXG5leHBvcnQgY29uc3QgZHluYW1pYyA9IFwiZm9yY2UtZHluYW1pY1wiOyAvLyBEb24ndCBjYWNoZSBhdXRoIHJlc3BvbnNlcyAiXSwibmFtZXMiOlsiaGFuZGxlcnMiLCJHRVQiLCJQT1NUIiwicnVudGltZSIsImR5bmFtaWMiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./app/api/auth/[...nextauth]/route.ts\n");

/***/ }),

/***/ "(rsc)/./auth.ts":
/*!*****************!*\
  !*** ./auth.ts ***!
  \*****************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authOptions: () => (/* binding */ authOptions)\n/* harmony export */ });\n/* harmony import */ var next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next-auth/providers/credentials */ \"(rsc)/./node_modules/next-auth/providers/credentials.js\");\n/* harmony import */ var _models_User__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/models/User */ \"(rsc)/./models/User.ts\");\n/* harmony import */ var _lib_logger__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/logger */ \"(rsc)/./lib/logger.ts\");\n/* harmony import */ var _models_AuditLog__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/models/AuditLog */ \"(rsc)/./models/AuditLog.ts\");\n\n\n\n\nconst logger = (0,_lib_logger__WEBPACK_IMPORTED_MODULE_2__.createNamespaceLogger)('auth');\nconst authOptions = {\n    providers: [\n        (0,next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n            name: \"credentials\",\n            credentials: {\n                email: {\n                    label: \"Email\",\n                    type: \"email\"\n                },\n                password: {\n                    label: \"Password\",\n                    type: \"password\"\n                }\n            },\n            async authorize (credentials, req) {\n                try {\n                    if (!credentials?.email || !credentials?.password) {\n                        logger.warn('Missing credentials in login attempt');\n                        return null;\n                    }\n                    logger.info('Login attempt', {\n                        email: credentials.email\n                    });\n                    const user = await _models_User__WEBPACK_IMPORTED_MODULE_1__.User.findByEmail(credentials.email);\n                    if (!user) {\n                        logger.warn('User not found', {\n                            email: credentials.email\n                        });\n                        // Create audit log for failed login\n                        await (0,_models_AuditLog__WEBPACK_IMPORTED_MODULE_3__.createAuditLog)(0, _models_AuditLog__WEBPACK_IMPORTED_MODULE_3__.AuditActions.LOGIN_FAILED, {\n                            details: {\n                                email: credentials.email,\n                                reason: 'User not found'\n                            },\n                            ipAddress: req?.headers?.['x-forwarded-for'] || req?.ip,\n                            userAgent: req?.headers?.['user-agent']\n                        });\n                        return null;\n                    }\n                    if (!user.isActive) {\n                        logger.warn('Inactive user login attempt', {\n                            email: credentials.email,\n                            userId: user.id\n                        });\n                        await (0,_models_AuditLog__WEBPACK_IMPORTED_MODULE_3__.createAuditLog)(user.id, _models_AuditLog__WEBPACK_IMPORTED_MODULE_3__.AuditActions.LOGIN_FAILED, {\n                            details: {\n                                reason: 'Account inactive'\n                            },\n                            ipAddress: req?.headers?.['x-forwarded-for'] || req?.ip,\n                            userAgent: req?.headers?.['user-agent']\n                        });\n                        return null;\n                    }\n                    const isPasswordValid = await _models_User__WEBPACK_IMPORTED_MODULE_1__.User.comparePassword(credentials.password, user.password);\n                    if (!isPasswordValid) {\n                        logger.warn('Invalid password', {\n                            email: credentials.email,\n                            userId: user.id\n                        });\n                        await (0,_models_AuditLog__WEBPACK_IMPORTED_MODULE_3__.createAuditLog)(user.id, _models_AuditLog__WEBPACK_IMPORTED_MODULE_3__.AuditActions.LOGIN_FAILED, {\n                            details: {\n                                reason: 'Invalid password'\n                            },\n                            ipAddress: req?.headers?.['x-forwarded-for'] || req?.ip,\n                            userAgent: req?.headers?.['user-agent']\n                        });\n                        return null;\n                    }\n                    // Update last login\n                    await _models_User__WEBPACK_IMPORTED_MODULE_1__.User.update(user.id, {\n                        lastLogin: new Date()\n                    });\n                    // Create successful login audit log\n                    await (0,_models_AuditLog__WEBPACK_IMPORTED_MODULE_3__.createAuditLog)(user.id, _models_AuditLog__WEBPACK_IMPORTED_MODULE_3__.AuditActions.LOGIN, {\n                        details: {\n                            loginMethod: 'credentials'\n                        },\n                        ipAddress: req?.headers?.['x-forwarded-for'] || req?.ip,\n                        userAgent: req?.headers?.['user-agent']\n                    });\n                    logger.info('Successful login', {\n                        email: credentials.email,\n                        userId: user.id\n                    });\n                    return {\n                        id: user.id.toString(),\n                        email: user.email,\n                        name: user.name,\n                        role: user.role,\n                        isActive: user.isActive\n                    };\n                } catch (error) {\n                    logger.error('Authentication error', {\n                        error: error instanceof Error ? error.message : 'Unknown error',\n                        email: credentials?.email\n                    });\n                    return null;\n                }\n            }\n        })\n    ],\n    session: {\n        strategy: \"jwt\",\n        maxAge: 30 * 24 * 60 * 60\n    },\n    jwt: {\n        maxAge: 30 * 24 * 60 * 60\n    },\n    pages: {\n        signIn: '/login',\n        error: '/login'\n    },\n    callbacks: {\n        async jwt ({ token, user }) {\n            if (user) {\n                token.role = user.role;\n                token.isActive = user.isActive;\n            }\n            return token;\n        },\n        async session ({ session, token }) {\n            if (token) {\n                session.user.id = token.sub;\n                session.user.role = token.role;\n                session.user.isActive = token.isActive;\n            }\n            return session;\n        }\n    },\n    events: {\n        async signOut ({ token }) {\n            if (token?.sub) {\n                logger.info('User signed out', {\n                    userId: token.sub\n                });\n                await (0,_models_AuditLog__WEBPACK_IMPORTED_MODULE_3__.createAuditLog)(parseInt(token.sub), _models_AuditLog__WEBPACK_IMPORTED_MODULE_3__.AuditActions.LOGOUT, {\n                    details: {\n                        logoutMethod: 'manual'\n                    }\n                });\n            }\n        }\n    },\n    debug: \"development\" === 'development'\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./auth.ts\n");

/***/ }),

/***/ "(rsc)/./lib/logger.ts":
/*!***********************!*\
  !*** ./lib/logger.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createNamespaceLogger: () => (/* binding */ createNamespaceLogger),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   logger: () => (/* binding */ logger)\n/* harmony export */ });\n/**\n * Logger utility for the application\n */ /**\n * Simple logger for the application\n * In a production environment, this would be replaced with a more robust solution\n * like winston, pino, or other logging libraries\n */ class Logger {\n    /**\n   * Log a debug message\n   * @param message - The message to log\n   * @param payload - Optional additional data to log\n   */ debug(message, payload) {\n        this.log('debug', {\n            message,\n            ...payload\n        });\n    }\n    /**\n   * Log an informational message\n   * @param message - The message to log\n   * @param payload - Optional additional data to log\n   */ info(message, payload) {\n        this.log('info', {\n            message,\n            ...payload\n        });\n    }\n    /**\n   * Log a warning message\n   * @param message - The message to log\n   * @param payload - Optional additional data to log\n   */ warn(message, payload) {\n        this.log('warn', {\n            message,\n            ...payload\n        });\n    }\n    /**\n   * Log an error message\n   * @param message - The message to log\n   * @param payload - Optional additional data to log\n   */ error(message, payload) {\n        this.log('error', {\n            message,\n            ...payload\n        });\n    }\n    /**\n   * Log a message with a specific log level\n   * @param level - The log level\n   * @param payload - The data to log\n   */ log(level, payload) {\n        // Skip logging in test environment\n        if (this.isTest) {\n            return;\n        }\n        // In development, pretty print the log\n        if (this.isDevelopment) {\n            const timestamp = new Date().toISOString();\n            const { message, ...data } = payload;\n            switch(level){\n                case 'debug':\n                    // eslint-disable-next-line no-console\n                    console.debug(`[${timestamp}] 🐛 DEBUG: ${message}`, Object.keys(data).length ? data : '');\n                    break;\n                case 'info':\n                    // eslint-disable-next-line no-console\n                    console.info(`[${timestamp}] ℹ️ INFO: ${message}`, Object.keys(data).length ? data : '');\n                    break;\n                case 'warn':\n                    // eslint-disable-next-line no-console\n                    console.warn(`[${timestamp}] ⚠️ WARN: ${message}`, Object.keys(data).length ? data : '');\n                    break;\n                case 'error':\n                    // eslint-disable-next-line no-console\n                    console.error(`[${timestamp}] 🔴 ERROR: ${message}`, Object.keys(data).length ? data : '');\n                    break;\n            }\n            return;\n        }\n        // In production, use structured logging (JSON format)\n        const logData = {\n            timestamp: new Date().toISOString(),\n            level,\n            ...payload\n        };\n        // In production we would typically use a more robust logging solution\n        // This is a simple fallback\n        switch(level){\n            case 'debug':\n                // eslint-disable-next-line no-console\n                console.debug(JSON.stringify(logData));\n                break;\n            case 'info':\n                // eslint-disable-next-line no-console\n                console.info(JSON.stringify(logData));\n                break;\n            case 'warn':\n                // eslint-disable-next-line no-console\n                console.warn(JSON.stringify(logData));\n                break;\n            case 'error':\n                // eslint-disable-next-line no-console\n                console.error(JSON.stringify(logData));\n                break;\n        }\n    }\n    constructor(){\n        this.isDevelopment = \"development\" === 'development';\n        this.isTest = \"development\" === 'test';\n    }\n}\n// Create a singleton logger instance\nconst logger = new Logger();\n/**\n * Create a namespace logger that includes a namespace in all logs\n * @param namespace - The namespace to include in logs\n */ const createNamespaceLogger = (namespace)=>{\n    return {\n        debug: (message, payload)=>logger.debug(message, {\n                namespace,\n                ...payload\n            }),\n        info: (message, payload)=>logger.info(message, {\n                namespace,\n                ...payload\n            }),\n        warn: (message, payload)=>logger.warn(message, {\n                namespace,\n                ...payload\n            }),\n        error: (message, payload)=>logger.error(message, {\n                namespace,\n                ...payload\n            })\n    };\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (logger);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/logger.ts\n");

/***/ }),

/***/ "(rsc)/./lib/mysql.ts":
/*!**********************!*\
  !*** ./lib/mysql.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   checkConnection: () => (/* binding */ checkConnection),\n/* harmony export */   closePool: () => (/* binding */ closePool),\n/* harmony export */   executeQuery: () => (/* binding */ executeQuery),\n/* harmony export */   getConnection: () => (/* binding */ getConnection)\n/* harmony export */ });\n/* harmony import */ var mysql2_promise__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mysql2/promise */ \"(rsc)/./node_modules/mysql2/promise.js\");\n/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./logger */ \"(rsc)/./lib/logger.ts\");\n\n\nconst dbLogger = (0,_logger__WEBPACK_IMPORTED_MODULE_1__.createNamespaceLogger)('mysql-database');\n// MySQL connection configuration for cPanel hosting\nconst dbConfig = {\n    host: process.env.DB_HOST || 'localhost',\n    user: process.env.DB_USER || 'root',\n    password: process.env.DB_PASSWORD || '',\n    database: process.env.DB_NAME || 'civix_production',\n    port: parseInt(process.env.DB_PORT || '3306'),\n    connectionLimit: 10,\n    acquireTimeout: 60000,\n    timeout: 60000,\n    reconnect: true,\n    charset: 'utf8mb4'\n};\n// Create connection pool\nlet pool = null;\nasync function getConnection() {\n    try {\n        if (!pool) {\n            pool = mysql2_promise__WEBPACK_IMPORTED_MODULE_0__.createPool(dbConfig);\n            dbLogger.info('MySQL connection pool created successfully');\n        }\n        const connection = await pool.getConnection();\n        dbLogger.debug('MySQL connection acquired from pool');\n        return connection;\n    } catch (error) {\n        dbLogger.error('MySQL connection error', {\n            error: error instanceof Error ? error.message : 'Unknown error',\n            config: {\n                host: dbConfig.host,\n                database: dbConfig.database,\n                port: dbConfig.port\n            }\n        });\n        throw error;\n    }\n}\nasync function executeQuery(query, params = []) {\n    let connection;\n    try {\n        connection = await getConnection();\n        const [rows] = await connection.execute(query, params);\n        dbLogger.debug('Query executed successfully', {\n            query,\n            params\n        });\n        return rows;\n    } catch (error) {\n        dbLogger.error('Query execution error', {\n            error: error instanceof Error ? error.message : 'Unknown error',\n            query,\n            params\n        });\n        throw error;\n    } finally{\n        if (connection) {\n            connection.release();\n            dbLogger.debug('MySQL connection released back to pool');\n        }\n    }\n}\nasync function closePool() {\n    if (pool) {\n        await pool.end();\n        pool = null;\n        dbLogger.info('MySQL connection pool closed');\n    }\n}\n// Health check function\nasync function checkConnection() {\n    try {\n        const connection = await getConnection();\n        await connection.ping();\n        connection.release();\n        return true;\n    } catch (error) {\n        return false;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvbXlzcWwudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQW1DO0FBQ2M7QUFFakQsTUFBTUUsV0FBV0QsOERBQXFCQSxDQUFDO0FBRXZDLG9EQUFvRDtBQUNwRCxNQUFNRSxXQUFXO0lBQ2ZDLE1BQU1DLFFBQVFDLEdBQUcsQ0FBQ0MsT0FBTyxJQUFJO0lBQzdCQyxNQUFNSCxRQUFRQyxHQUFHLENBQUNHLE9BQU8sSUFBSTtJQUM3QkMsVUFBVUwsUUFBUUMsR0FBRyxDQUFDSyxXQUFXLElBQUk7SUFDckNDLFVBQVVQLFFBQVFDLEdBQUcsQ0FBQ08sT0FBTyxJQUFJO0lBQ2pDQyxNQUFNQyxTQUFTVixRQUFRQyxHQUFHLENBQUNVLE9BQU8sSUFBSTtJQUN0Q0MsaUJBQWlCO0lBQ2pCQyxnQkFBZ0I7SUFDaEJDLFNBQVM7SUFDVEMsV0FBVztJQUNYQyxTQUFTO0FBQ1g7QUFFQSx5QkFBeUI7QUFDekIsSUFBSUMsT0FBMEI7QUFFdkIsZUFBZUM7SUFDcEIsSUFBSTtRQUNGLElBQUksQ0FBQ0QsTUFBTTtZQUNUQSxPQUFPdEIsc0RBQWdCLENBQUNHO1lBQ3hCRCxTQUFTdUIsSUFBSSxDQUFDO1FBQ2hCO1FBRUEsTUFBTUMsYUFBYSxNQUFNSixLQUFLQyxhQUFhO1FBQzNDckIsU0FBU3lCLEtBQUssQ0FBQztRQUNmLE9BQU9EO0lBQ1QsRUFBRSxPQUFPRSxPQUFPO1FBQ2QxQixTQUFTMEIsS0FBSyxDQUFDLDBCQUEwQjtZQUN2Q0EsT0FBT0EsaUJBQWlCQyxRQUFRRCxNQUFNRSxPQUFPLEdBQUc7WUFDaERDLFFBQVE7Z0JBQ04zQixNQUFNRCxTQUFTQyxJQUFJO2dCQUNuQlEsVUFBVVQsU0FBU1MsUUFBUTtnQkFDM0JFLE1BQU1YLFNBQVNXLElBQUk7WUFDckI7UUFDRjtRQUNBLE1BQU1jO0lBQ1I7QUFDRjtBQUVPLGVBQWVJLGFBQ3BCQyxLQUFhLEVBQ2JDLFNBQWdCLEVBQUU7SUFFbEIsSUFBSVI7SUFDSixJQUFJO1FBQ0ZBLGFBQWEsTUFBTUg7UUFDbkIsTUFBTSxDQUFDWSxLQUFLLEdBQUcsTUFBTVQsV0FBV1UsT0FBTyxDQUFDSCxPQUFPQztRQUMvQ2hDLFNBQVN5QixLQUFLLENBQUMsK0JBQStCO1lBQUVNO1lBQU9DO1FBQU87UUFDOUQsT0FBT0M7SUFDVCxFQUFFLE9BQU9QLE9BQU87UUFDZDFCLFNBQVMwQixLQUFLLENBQUMseUJBQXlCO1lBQ3RDQSxPQUFPQSxpQkFBaUJDLFFBQVFELE1BQU1FLE9BQU8sR0FBRztZQUNoREc7WUFDQUM7UUFDRjtRQUNBLE1BQU1OO0lBQ1IsU0FBVTtRQUNSLElBQUlGLFlBQVk7WUFDZEEsV0FBV1csT0FBTztZQUNsQm5DLFNBQVN5QixLQUFLLENBQUM7UUFDakI7SUFDRjtBQUNGO0FBRU8sZUFBZVc7SUFDcEIsSUFBSWhCLE1BQU07UUFDUixNQUFNQSxLQUFLaUIsR0FBRztRQUNkakIsT0FBTztRQUNQcEIsU0FBU3VCLElBQUksQ0FBQztJQUNoQjtBQUNGO0FBRUEsd0JBQXdCO0FBQ2pCLGVBQWVlO0lBQ3BCLElBQUk7UUFDRixNQUFNZCxhQUFhLE1BQU1IO1FBQ3pCLE1BQU1HLFdBQVdlLElBQUk7UUFDckJmLFdBQVdXLE9BQU87UUFDbEIsT0FBTztJQUNULEVBQUUsT0FBT1QsT0FBTztRQUNkLE9BQU87SUFDVDtBQUNGIiwic291cmNlcyI6WyIvVXNlcnMvbWFjYm9vay9EZXNrdG9wL3BlcnNvbmFsLXdvcmtzcGFjZS9jaXZpeC1zcWwvbGliL215c3FsLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBteXNxbCBmcm9tICdteXNxbDIvcHJvbWlzZSc7XG5pbXBvcnQgeyBjcmVhdGVOYW1lc3BhY2VMb2dnZXIgfSBmcm9tICcuL2xvZ2dlcic7XG5cbmNvbnN0IGRiTG9nZ2VyID0gY3JlYXRlTmFtZXNwYWNlTG9nZ2VyKCdteXNxbC1kYXRhYmFzZScpO1xuXG4vLyBNeVNRTCBjb25uZWN0aW9uIGNvbmZpZ3VyYXRpb24gZm9yIGNQYW5lbCBob3N0aW5nXG5jb25zdCBkYkNvbmZpZyA9IHtcbiAgaG9zdDogcHJvY2Vzcy5lbnYuREJfSE9TVCB8fCAnbG9jYWxob3N0JyxcbiAgdXNlcjogcHJvY2Vzcy5lbnYuREJfVVNFUiB8fCAncm9vdCcsXG4gIHBhc3N3b3JkOiBwcm9jZXNzLmVudi5EQl9QQVNTV09SRCB8fCAnJyxcbiAgZGF0YWJhc2U6IHByb2Nlc3MuZW52LkRCX05BTUUgfHwgJ2Npdml4X3Byb2R1Y3Rpb24nLFxuICBwb3J0OiBwYXJzZUludChwcm9jZXNzLmVudi5EQl9QT1JUIHx8ICczMzA2JyksXG4gIGNvbm5lY3Rpb25MaW1pdDogMTAsXG4gIGFjcXVpcmVUaW1lb3V0OiA2MDAwMCxcbiAgdGltZW91dDogNjAwMDAsXG4gIHJlY29ubmVjdDogdHJ1ZSxcbiAgY2hhcnNldDogJ3V0ZjhtYjQnXG59O1xuXG4vLyBDcmVhdGUgY29ubmVjdGlvbiBwb29sXG5sZXQgcG9vbDogbXlzcWwuUG9vbCB8IG51bGwgPSBudWxsO1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0Q29ubmVjdGlvbigpIHtcbiAgdHJ5IHtcbiAgICBpZiAoIXBvb2wpIHtcbiAgICAgIHBvb2wgPSBteXNxbC5jcmVhdGVQb29sKGRiQ29uZmlnKTtcbiAgICAgIGRiTG9nZ2VyLmluZm8oJ015U1FMIGNvbm5lY3Rpb24gcG9vbCBjcmVhdGVkIHN1Y2Nlc3NmdWxseScpO1xuICAgIH1cbiAgICBcbiAgICBjb25zdCBjb25uZWN0aW9uID0gYXdhaXQgcG9vbC5nZXRDb25uZWN0aW9uKCk7XG4gICAgZGJMb2dnZXIuZGVidWcoJ015U1FMIGNvbm5lY3Rpb24gYWNxdWlyZWQgZnJvbSBwb29sJyk7XG4gICAgcmV0dXJuIGNvbm5lY3Rpb247XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgZGJMb2dnZXIuZXJyb3IoJ015U1FMIGNvbm5lY3Rpb24gZXJyb3InLCB7XG4gICAgICBlcnJvcjogZXJyb3IgaW5zdGFuY2VvZiBFcnJvciA/IGVycm9yLm1lc3NhZ2UgOiAnVW5rbm93biBlcnJvcicsXG4gICAgICBjb25maWc6IHtcbiAgICAgICAgaG9zdDogZGJDb25maWcuaG9zdCxcbiAgICAgICAgZGF0YWJhc2U6IGRiQ29uZmlnLmRhdGFiYXNlLFxuICAgICAgICBwb3J0OiBkYkNvbmZpZy5wb3J0XG4gICAgICB9XG4gICAgfSk7XG4gICAgdGhyb3cgZXJyb3I7XG4gIH1cbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGV4ZWN1dGVRdWVyeTxUID0gYW55PihcbiAgcXVlcnk6IHN0cmluZywgXG4gIHBhcmFtczogYW55W10gPSBbXVxuKTogUHJvbWlzZTxUPiB7XG4gIGxldCBjb25uZWN0aW9uO1xuICB0cnkge1xuICAgIGNvbm5lY3Rpb24gPSBhd2FpdCBnZXRDb25uZWN0aW9uKCk7XG4gICAgY29uc3QgW3Jvd3NdID0gYXdhaXQgY29ubmVjdGlvbi5leGVjdXRlKHF1ZXJ5LCBwYXJhbXMpO1xuICAgIGRiTG9nZ2VyLmRlYnVnKCdRdWVyeSBleGVjdXRlZCBzdWNjZXNzZnVsbHknLCB7IHF1ZXJ5LCBwYXJhbXMgfSk7XG4gICAgcmV0dXJuIHJvd3MgYXMgVDtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBkYkxvZ2dlci5lcnJvcignUXVlcnkgZXhlY3V0aW9uIGVycm9yJywge1xuICAgICAgZXJyb3I6IGVycm9yIGluc3RhbmNlb2YgRXJyb3IgPyBlcnJvci5tZXNzYWdlIDogJ1Vua25vd24gZXJyb3InLFxuICAgICAgcXVlcnksXG4gICAgICBwYXJhbXNcbiAgICB9KTtcbiAgICB0aHJvdyBlcnJvcjtcbiAgfSBmaW5hbGx5IHtcbiAgICBpZiAoY29ubmVjdGlvbikge1xuICAgICAgY29ubmVjdGlvbi5yZWxlYXNlKCk7XG4gICAgICBkYkxvZ2dlci5kZWJ1ZygnTXlTUUwgY29ubmVjdGlvbiByZWxlYXNlZCBiYWNrIHRvIHBvb2wnKTtcbiAgICB9XG4gIH1cbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGNsb3NlUG9vbCgpIHtcbiAgaWYgKHBvb2wpIHtcbiAgICBhd2FpdCBwb29sLmVuZCgpO1xuICAgIHBvb2wgPSBudWxsO1xuICAgIGRiTG9nZ2VyLmluZm8oJ015U1FMIGNvbm5lY3Rpb24gcG9vbCBjbG9zZWQnKTtcbiAgfVxufVxuXG4vLyBIZWFsdGggY2hlY2sgZnVuY3Rpb25cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBjaGVja0Nvbm5lY3Rpb24oKTogUHJvbWlzZTxib29sZWFuPiB7XG4gIHRyeSB7XG4gICAgY29uc3QgY29ubmVjdGlvbiA9IGF3YWl0IGdldENvbm5lY3Rpb24oKTtcbiAgICBhd2FpdCBjb25uZWN0aW9uLnBpbmcoKTtcbiAgICBjb25uZWN0aW9uLnJlbGVhc2UoKTtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbn0iXSwibmFtZXMiOlsibXlzcWwiLCJjcmVhdGVOYW1lc3BhY2VMb2dnZXIiLCJkYkxvZ2dlciIsImRiQ29uZmlnIiwiaG9zdCIsInByb2Nlc3MiLCJlbnYiLCJEQl9IT1NUIiwidXNlciIsIkRCX1VTRVIiLCJwYXNzd29yZCIsIkRCX1BBU1NXT1JEIiwiZGF0YWJhc2UiLCJEQl9OQU1FIiwicG9ydCIsInBhcnNlSW50IiwiREJfUE9SVCIsImNvbm5lY3Rpb25MaW1pdCIsImFjcXVpcmVUaW1lb3V0IiwidGltZW91dCIsInJlY29ubmVjdCIsImNoYXJzZXQiLCJwb29sIiwiZ2V0Q29ubmVjdGlvbiIsImNyZWF0ZVBvb2wiLCJpbmZvIiwiY29ubmVjdGlvbiIsImRlYnVnIiwiZXJyb3IiLCJFcnJvciIsIm1lc3NhZ2UiLCJjb25maWciLCJleGVjdXRlUXVlcnkiLCJxdWVyeSIsInBhcmFtcyIsInJvd3MiLCJleGVjdXRlIiwicmVsZWFzZSIsImNsb3NlUG9vbCIsImVuZCIsImNoZWNrQ29ubmVjdGlvbiIsInBpbmciXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./lib/mysql.ts\n");

/***/ }),

/***/ "(rsc)/./models/AuditLog.ts":
/*!****************************!*\
  !*** ./models/AuditLog.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuditActions: () => (/* binding */ AuditActions),\n/* harmony export */   AuditLog: () => (/* binding */ AuditLog),\n/* harmony export */   createAuditLog: () => (/* binding */ createAuditLog),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _lib_mysql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/mysql */ \"(rsc)/./lib/mysql.ts\");\n\n// Define common audit actions as constants\nconst AuditActions = {\n    // Authentication actions\n    LOGIN: \"LOGIN\",\n    LOGOUT: \"LOGOUT\",\n    LOGIN_FAILED: \"LOGIN_FAILED\",\n    PASSWORD_CHANGED: \"PASSWORD_CHANGED\",\n    PASSWORD_RESET_REQUESTED: \"PASSWORD_RESET_REQUESTED\",\n    PASSWORD_RESET_COMPLETED: \"PASSWORD_RESET_COMPLETED\",\n    // User account actions\n    USER_CREATED: \"USER_CREATED\",\n    USER_UPDATED: \"USER_UPDATED\",\n    USER_DELETED: \"USER_DELETED\",\n    // Booking actions\n    BOOKING_CREATED: \"BOOKING_CREATED\",\n    BOOKING_UPDATED: \"BOOKING_UPDATED\",\n    BOOKING_CANCELLED: \"BOOKING_CANCELLED\",\n    BOOKING_COMPLETED: \"BOOKING_COMPLETED\",\n    // Service actions\n    SERVICE_CREATED: \"SERVICE_CREATED\",\n    SERVICE_UPDATED: \"SERVICE_UPDATED\",\n    SERVICE_DELETED: \"SERVICE_DELETED\",\n    // Admin actions\n    SETTING_CHANGED: \"SETTING_CHANGED\",\n    ROLE_CHANGED: \"ROLE_CHANGED\"\n};\nclass AuditLog {\n    // Create audit log entry\n    static async create(auditData) {\n        try {\n            const query = `\n        INSERT INTO audit_logs (\n          userId, action, entityId, entityType, details, ipAddress, userAgent\n        ) VALUES (?, ?, ?, ?, ?, ?, ?)\n      `;\n            const params = [\n                auditData.userId,\n                auditData.action,\n                auditData.entityId || null,\n                auditData.entityType || null,\n                auditData.details || null,\n                auditData.ipAddress || null,\n                auditData.userAgent || null\n            ];\n            const result = await (0,_lib_mysql__WEBPACK_IMPORTED_MODULE_0__.executeQuery)(query, params);\n            return await AuditLog.findById(result.insertId);\n        } catch (error) {\n            // Non-blocking - we don't want to fail operations if audit logging fails\n            console.warn('Audit log creation failed:', error);\n            return null;\n        }\n    }\n    // Find audit log by ID\n    static async findById(id) {\n        const query = 'SELECT * FROM audit_logs WHERE id = ?';\n        const logs = await (0,_lib_mysql__WEBPACK_IMPORTED_MODULE_0__.executeQuery)(query, [\n            id\n        ]);\n        if (logs.length === 0) return null;\n        const log = logs[0];\n        if (log.details && typeof log.details === 'string') {\n            try {\n                log.details = JSON.parse(log.details);\n            } catch  {\n                log.details = undefined;\n            }\n        }\n        return log;\n    }\n    // Find audit logs with filters and pagination\n    static async find(filters = {}, options = {}) {\n        let query = 'SELECT * FROM audit_logs WHERE 1=1';\n        const params = [];\n        // Apply filters\n        if (filters.userId) {\n            query += ' AND userId = ?';\n            params.push(filters.userId);\n        }\n        if (filters.action) {\n            query += ' AND action = ?';\n            params.push(filters.action);\n        }\n        if (filters.entityType) {\n            query += ' AND entityType = ?';\n            params.push(filters.entityType);\n        }\n        if (filters.dateFrom) {\n            query += ' AND createdAt >= ?';\n            params.push(filters.dateFrom);\n        }\n        if (filters.dateTo) {\n            query += ' AND createdAt <= ?';\n            params.push(filters.dateTo);\n        }\n        // Get total count\n        const countQuery = query.replace('SELECT *', 'SELECT COUNT(*) as count');\n        const countResult = await (0,_lib_mysql__WEBPACK_IMPORTED_MODULE_0__.executeQuery)(countQuery, params);\n        const total = countResult[0].count;\n        // Apply sorting and pagination\n        const sort = options.sort || 'createdAt';\n        const order = options.order || 'DESC';\n        query += ` ORDER BY ${sort} ${order}`;\n        if (options.limit) {\n            const offset = ((options.page || 1) - 1) * options.limit;\n            query += ' LIMIT ? OFFSET ?';\n            params.push(options.limit, offset);\n        }\n        const logs = await (0,_lib_mysql__WEBPACK_IMPORTED_MODULE_0__.executeQuery)(query, params);\n        // Parse details for each log\n        logs.forEach((log)=>{\n            if (log.details && typeof log.details === 'string') {\n                try {\n                    log.details = JSON.parse(log.details);\n                } catch  {\n                    log.details = undefined;\n                }\n            }\n        });\n        return {\n            logs,\n            total\n        };\n    }\n    // Delete old logs (cleanup)\n    static async cleanup(olderThanDays = 90) {\n        const query = 'DELETE FROM audit_logs WHERE createdAt < DATE_SUB(NOW(), INTERVAL ? DAY)';\n        const result = await (0,_lib_mysql__WEBPACK_IMPORTED_MODULE_0__.executeQuery)(query, [\n            olderThanDays\n        ]);\n        return result.affectedRows;\n    }\n}\n// Create audit log utility function\nconst createAuditLog = async (userId, action, data)=>{\n    try {\n        return await AuditLog.create({\n            userId,\n            action,\n            entityId: data.entityId,\n            entityType: data.entityType,\n            details: data.details ? JSON.stringify(data.details) : undefined,\n            ipAddress: data.ipAddress,\n            userAgent: data.userAgent\n        });\n    } catch (error) {\n        // Non-blocking - we don't want to fail operations if audit logging fails\n        console.warn('Audit log creation failed:', error);\n        return null;\n    }\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (AuditLog);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./models/AuditLog.ts\n");

/***/ }),

/***/ "(rsc)/./models/User.ts":
/*!************************!*\
  !*** ./models/User.ts ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   User: () => (/* binding */ User),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! bcryptjs */ \"(rsc)/./node_modules/bcryptjs/index.js\");\n/* harmony import */ var _lib_mysql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/mysql */ \"(rsc)/./lib/mysql.ts\");\n\n\nclass User {\n    // Create a new user\n    static async create(userData) {\n        const hashedPassword = await bcryptjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"].hash(userData.password, 10);\n        const query = `\n      INSERT INTO users (\n        name, email, password, role, phone, address, isActive, \n        settings, resetPasswordToken, resetPasswordExpires\n      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\n    `;\n        const params = [\n            userData.name,\n            userData.email,\n            hashedPassword,\n            userData.role || 'USER',\n            userData.phone || null,\n            userData.address || null,\n            userData.isActive !== false ? 1 : 0,\n            userData.settings ? JSON.stringify(userData.settings) : null,\n            userData.resetPasswordToken || null,\n            userData.resetPasswordExpires || null\n        ];\n        const result = await (0,_lib_mysql__WEBPACK_IMPORTED_MODULE_1__.executeQuery)(query, params);\n        return await User.findById(result.insertId);\n    }\n    // Find user by ID\n    static async findById(id) {\n        const query = 'SELECT * FROM users WHERE id = ?';\n        const users = await (0,_lib_mysql__WEBPACK_IMPORTED_MODULE_1__.executeQuery)(query, [\n            id\n        ]);\n        if (users.length === 0) return null;\n        const user = users[0];\n        if (user.settings && typeof user.settings === 'string') {\n            try {\n                user.settings = JSON.parse(user.settings);\n            } catch  {\n                user.settings = undefined;\n            }\n        }\n        return user;\n    }\n    // Find user by email\n    static async findByEmail(email) {\n        const query = 'SELECT * FROM users WHERE email = ?';\n        const users = await (0,_lib_mysql__WEBPACK_IMPORTED_MODULE_1__.executeQuery)(query, [\n            email\n        ]);\n        if (users.length === 0) return null;\n        const user = users[0];\n        if (user.settings && typeof user.settings === 'string') {\n            try {\n                user.settings = JSON.parse(user.settings);\n            } catch  {\n                user.settings = undefined;\n            }\n        }\n        return user;\n    }\n    // Find users with filters and pagination\n    static async find(filters = {}, options = {}) {\n        let query = 'SELECT * FROM users WHERE 1=1';\n        const params = [];\n        // Apply filters\n        if (filters.role) {\n            query += ' AND role = ?';\n            params.push(filters.role);\n        }\n        if (filters.isActive !== undefined) {\n            query += ' AND isActive = ?';\n            params.push(filters.isActive ? 1 : 0);\n        }\n        if (filters.search) {\n            query += ' AND (name LIKE ? OR email LIKE ?)';\n            params.push(`%${filters.search}%`, `%${filters.search}%`);\n        }\n        // Get total count\n        const countQuery = query.replace('SELECT *', 'SELECT COUNT(*) as count');\n        const countResult = await (0,_lib_mysql__WEBPACK_IMPORTED_MODULE_1__.executeQuery)(countQuery, params);\n        const total = countResult[0].count;\n        // Apply sorting and pagination\n        const sort = options.sort || 'createdAt';\n        const order = options.order || 'DESC';\n        query += ` ORDER BY ${sort} ${order}`;\n        if (options.limit) {\n            const offset = ((options.page || 1) - 1) * options.limit;\n            query += ' LIMIT ? OFFSET ?';\n            params.push(options.limit, offset);\n        }\n        const users = await (0,_lib_mysql__WEBPACK_IMPORTED_MODULE_1__.executeQuery)(query, params);\n        // Parse settings for each user\n        users.forEach((user)=>{\n            if (user.settings && typeof user.settings === 'string') {\n                try {\n                    user.settings = JSON.parse(user.settings);\n                } catch  {\n                    user.settings = undefined;\n                }\n            }\n        });\n        return {\n            users,\n            total\n        };\n    }\n    // Update user\n    static async update(id, updates) {\n        const allowedFields = [\n            'name',\n            'email',\n            'role',\n            'phone',\n            'address',\n            'isActive',\n            'settings',\n            'lastLogin',\n            'resetPasswordToken',\n            'resetPasswordExpires'\n        ];\n        const fields = [];\n        const params = [];\n        Object.keys(updates).forEach((key)=>{\n            if (allowedFields.includes(key) && updates[key] !== undefined) {\n                fields.push(`${key} = ?`);\n                if (key === 'settings' && typeof updates[key] === 'object') {\n                    params.push(JSON.stringify(updates[key]));\n                } else if (key === 'isActive') {\n                    params.push(updates[key] ? 1 : 0);\n                } else {\n                    params.push(updates[key]);\n                }\n            }\n        });\n        if (fields.length === 0) return null;\n        fields.push('updatedAt = NOW()');\n        params.push(id);\n        const query = `UPDATE users SET ${fields.join(', ')} WHERE id = ?`;\n        await (0,_lib_mysql__WEBPACK_IMPORTED_MODULE_1__.executeQuery)(query, params);\n        return await User.findById(id);\n    }\n    // Delete user\n    static async delete(id) {\n        const query = 'DELETE FROM users WHERE id = ?';\n        const result = await (0,_lib_mysql__WEBPACK_IMPORTED_MODULE_1__.executeQuery)(query, [\n            id\n        ]);\n        return result.affectedRows > 0;\n    }\n    // Compare password\n    static async comparePassword(plainPassword, hashedPassword) {\n        return bcryptjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"].compare(plainPassword, hashedPassword);\n    }\n    // Update password\n    static async updatePassword(id, newPassword) {\n        const hashedPassword = await bcryptjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"].hash(newPassword, 10);\n        const query = 'UPDATE users SET password = ?, updatedAt = NOW() WHERE id = ?';\n        const result = await (0,_lib_mysql__WEBPACK_IMPORTED_MODULE_1__.executeQuery)(query, [\n            hashedPassword,\n            id\n        ]);\n        return result.affectedRows > 0;\n    }\n    // Find by reset token\n    static async findByResetToken(token) {\n        const query = `\n      SELECT * FROM users \n      WHERE resetPasswordToken = ? \n      AND resetPasswordExpires > NOW()\n    `;\n        const users = await (0,_lib_mysql__WEBPACK_IMPORTED_MODULE_1__.executeQuery)(query, [\n            token\n        ]);\n        return users.length > 0 ? users[0] : null;\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (User);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./models/User.ts\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib sync recursive ^cardinal.*$":
/*!****************************************************!*\
  !*** ./node_modules/mysql2/lib/ sync ^cardinal.*$ ***!
  \****************************************************/
/***/ ((module) => {

function webpackEmptyContext(req) {
	var e = new Error("Cannot find module '" + req + "'");
	e.code = 'MODULE_NOT_FOUND';
	throw e;
}
webpackEmptyContext.keys = () => ([]);
webpackEmptyContext.resolve = webpackEmptyContext;
webpackEmptyContext.id = "(rsc)/./node_modules/mysql2/lib sync recursive ^cardinal.*$";
module.exports = webpackEmptyContext;

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fauth%2F%5B...nextauth%5D%2Froute&page=%2Fapi%2Fauth%2F%5B...nextauth%5D%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fauth%2F%5B...nextauth%5D%2Froute.ts&appDir=%2FUsers%2Fmacbook%2FDesktop%2Fpersonal-workspace%2Fcivix-sql%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fmacbook%2FDesktop%2Fpersonal-workspace%2Fcivix-sql&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fauth%2F%5B...nextauth%5D%2Froute&page=%2Fapi%2Fauth%2F%5B...nextauth%5D%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fauth%2F%5B...nextauth%5D%2Froute.ts&appDir=%2FUsers%2Fmacbook%2FDesktop%2Fpersonal-workspace%2Fcivix-sql%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fmacbook%2FDesktop%2Fpersonal-workspace%2Fcivix-sql&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=! ***!
  \***********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   handler: () => (/* binding */ handler),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/server/request-meta */ \"(rsc)/./node_modules/next/dist/server/request-meta.js\");\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/dist/server/lib/trace/tracer */ \"(rsc)/./node_modules/next/dist/server/lib/trace/tracer.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/dist/shared/lib/router/utils/app-paths */ \"next/dist/shared/lib/router/utils/app-paths\");\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/dist/server/base-http/node */ \"(rsc)/./node_modules/next/dist/server/base-http/node.js\");\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! next/dist/server/web/spec-extension/adapters/next-request */ \"(rsc)/./node_modules/next/dist/server/web/spec-extension/adapters/next-request.js\");\n/* harmony import */ var next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! next/dist/server/lib/trace/constants */ \"(rsc)/./node_modules/next/dist/server/lib/trace/constants.js\");\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! next/dist/server/instrumentation/utils */ \"(rsc)/./node_modules/next/dist/server/instrumentation/utils.js\");\n/* harmony import */ var next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! next/dist/server/send-response */ \"(rsc)/./node_modules/next/dist/server/send-response.js\");\n/* harmony import */ var next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! next/dist/server/web/utils */ \"(rsc)/./node_modules/next/dist/server/web/utils.js\");\n/* harmony import */ var next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! next/dist/server/lib/cache-control */ \"(rsc)/./node_modules/next/dist/server/lib/cache-control.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! next/dist/lib/constants */ \"(rsc)/./node_modules/next/dist/lib/constants.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__);\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! next/dist/shared/lib/no-fallback-error.external */ \"next/dist/shared/lib/no-fallback-error.external\");\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__);\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! next/dist/server/response-cache */ \"(rsc)/./node_modules/next/dist/server/response-cache/index.js\");\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__);\n/* harmony import */ var _Users_macbook_Desktop_personal_workspace_civix_sql_app_api_auth_nextauth_route_ts__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./app/api/auth/[...nextauth]/route.ts */ \"(rsc)/./app/api/auth/[...nextauth]/route.ts\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"standalone\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/auth/[...nextauth]/route\",\n        pathname: \"/api/auth/[...nextauth]\",\n        filename: \"route\",\n        bundlePath: \"app/api/auth/[...nextauth]/route\"\n    },\n    distDir: \".next\" || 0,\n    projectDir:  false || '',\n    resolvedPagePath: \"/Users/macbook/Desktop/personal-workspace/civix-sql/app/api/auth/[...nextauth]/route.ts\",\n    nextConfigOutput,\n    userland: _Users_macbook_Desktop_personal_workspace_civix_sql_app_api_auth_nextauth_route_ts__WEBPACK_IMPORTED_MODULE_16__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\nasync function handler(req, res, ctx) {\n    var _nextConfig_experimental;\n    let srcPage = \"/api/auth/[...nextauth]/route\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (false) {} else if (srcPage === '/index') {\n        // we always normalize /index specifically\n        srcPage = '/';\n    }\n    const multiZoneDraftMode = \"false\";\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage,\n        multiZoneDraftMode\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return null;\n    }\n    const { buildId, params, nextConfig, isDraftMode, prerenderManifest, routerServerContext, isOnDemandRevalidate, revalidateOnlyGenerated, resolvedPathname } = prepareResult;\n    const normalizedSrcPage = (0,next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__.normalizeAppPath)(srcPage);\n    let isIsr = Boolean(prerenderManifest.dynamicRoutes[normalizedSrcPage] || prerenderManifest.routes[resolvedPathname]);\n    if (isIsr && !isDraftMode) {\n        const isPrerendered = Boolean(prerenderManifest.routes[resolvedPathname]);\n        const prerenderInfo = prerenderManifest.dynamicRoutes[normalizedSrcPage];\n        if (prerenderInfo) {\n            if (prerenderInfo.fallback === false && !isPrerendered) {\n                throw new next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__.NoFallbackError();\n            }\n        }\n    }\n    let cacheKey = null;\n    if (isIsr && !routeModule.isDev && !isDraftMode) {\n        cacheKey = resolvedPathname;\n        // ensure /index and / is normalized to one key\n        cacheKey = cacheKey === '/index' ? '/' : cacheKey;\n    }\n    const supportsDynamicResponse = // If we're in development, we always support dynamic HTML\n    routeModule.isDev === true || // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isIsr;\n    // This is a revalidation request if the request is for a static\n    // page and it is not being resumed from a postponed render and\n    // it is not a dynamic RSC request then it is a revalidation\n    // request.\n    const isRevalidate = isIsr && !supportsDynamicResponse;\n    const method = req.method || 'GET';\n    const tracer = (0,next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__.getTracer)();\n    const activeSpan = tracer.getActiveScopeSpan();\n    const context = {\n        params,\n        prerenderManifest,\n        renderOpts: {\n            experimental: {\n                dynamicIO: Boolean(nextConfig.experimental.dynamicIO),\n                authInterrupts: Boolean(nextConfig.experimental.authInterrupts)\n            },\n            supportsDynamicResponse,\n            incrementalCache: (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'incrementalCache'),\n            cacheLifeProfiles: (_nextConfig_experimental = nextConfig.experimental) == null ? void 0 : _nextConfig_experimental.cacheLife,\n            isRevalidate,\n            waitUntil: ctx.waitUntil,\n            onClose: (cb)=>{\n                res.on('close', cb);\n            },\n            onAfterTaskError: undefined,\n            onInstrumentationRequestError: (error, _request, errorContext)=>routeModule.onRequestError(req, error, errorContext, routerServerContext)\n        },\n        sharedContext: {\n            buildId\n        }\n    };\n    const nodeNextReq = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__.NodeNextRequest(req);\n    const nodeNextRes = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__.NodeNextResponse(res);\n    const nextReq = next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__.NextRequestAdapter.fromNodeNextRequest(nodeNextReq, (0,next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__.signalFromNodeResponse)(res));\n    try {\n        const invokeRouteModule = async (span)=>{\n            return routeModule.handle(nextReq, context).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__.BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        };\n        const handleResponse = async (currentSpan)=>{\n            var _cacheEntry_value;\n            const responseGenerator = async ({ previousCacheEntry })=>{\n                try {\n                    if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode') && isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry) {\n                        res.statusCode = 404;\n                        // on-demand revalidate always sets this header\n                        res.setHeader('x-nextjs-cache', 'REVALIDATED');\n                        res.end('This page could not be found');\n                        return null;\n                    }\n                    const response = await invokeRouteModule(currentSpan);\n                    req.fetchMetrics = context.renderOpts.fetchMetrics;\n                    let pendingWaitUntil = context.renderOpts.pendingWaitUntil;\n                    // Attempt using provided waitUntil if available\n                    // if it's not we fallback to sendResponse's handling\n                    if (pendingWaitUntil) {\n                        if (ctx.waitUntil) {\n                            ctx.waitUntil(pendingWaitUntil);\n                            pendingWaitUntil = undefined;\n                        }\n                    }\n                    const cacheTags = context.renderOpts.collectedTags;\n                    // If the request is for a static response, we can cache it so long\n                    // as it's not edge.\n                    if (isIsr) {\n                        const blob = await response.blob();\n                        // Copy the headers from the response.\n                        const headers = (0,next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__.toNodeOutgoingHttpHeaders)(response.headers);\n                        if (cacheTags) {\n                            headers[next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.NEXT_CACHE_TAGS_HEADER] = cacheTags;\n                        }\n                        if (!headers['content-type'] && blob.type) {\n                            headers['content-type'] = blob.type;\n                        }\n                        const revalidate = typeof context.renderOpts.collectedRevalidate === 'undefined' || context.renderOpts.collectedRevalidate >= next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.INFINITE_CACHE ? false : context.renderOpts.collectedRevalidate;\n                        const expire = typeof context.renderOpts.collectedExpire === 'undefined' || context.renderOpts.collectedExpire >= next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.INFINITE_CACHE ? undefined : context.renderOpts.collectedExpire;\n                        // Create the cache entry for the response.\n                        const cacheEntry = {\n                            value: {\n                                kind: next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__.CachedRouteKind.APP_ROUTE,\n                                status: response.status,\n                                body: Buffer.from(await blob.arrayBuffer()),\n                                headers\n                            },\n                            cacheControl: {\n                                revalidate,\n                                expire\n                            }\n                        };\n                        return cacheEntry;\n                    } else {\n                        // send response without caching if not ISR\n                        await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, response, context.renderOpts.pendingWaitUntil);\n                        return null;\n                    }\n                } catch (err) {\n                    // if this is a background revalidate we need to report\n                    // the request error here as it won't be bubbled\n                    if (previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) {\n                        await routeModule.onRequestError(req, err, {\n                            routerKind: 'App Router',\n                            routePath: srcPage,\n                            routeType: 'route',\n                            revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__.getRevalidateReason)({\n                                isRevalidate,\n                                isOnDemandRevalidate\n                            })\n                        }, routerServerContext);\n                    }\n                    throw err;\n                }\n            };\n            const cacheEntry = await routeModule.handleResponse({\n                req,\n                nextConfig,\n                cacheKey,\n                routeKind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n                isFallback: false,\n                prerenderManifest,\n                isRoutePPREnabled: false,\n                isOnDemandRevalidate,\n                revalidateOnlyGenerated,\n                responseGenerator,\n                waitUntil: ctx.waitUntil\n            });\n            // we don't create a cacheEntry for ISR\n            if (!isIsr) {\n                return null;\n            }\n            if ((cacheEntry == null ? void 0 : (_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__.CachedRouteKind.APP_ROUTE) {\n                var _cacheEntry_value1;\n                throw Object.defineProperty(new Error(`Invariant: app-route received invalid cache entry ${cacheEntry == null ? void 0 : (_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E701\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode')) {\n                res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n            }\n            // Draft mode should never be cached\n            if (isDraftMode) {\n                res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            }\n            const headers = (0,next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__.fromNodeOutgoingHttpHeaders)(cacheEntry.value.headers);\n            if (!((0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode') && isIsr)) {\n                headers.delete(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.NEXT_CACHE_TAGS_HEADER);\n            }\n            // If cache control is already set on the response we don't\n            // override it to allow users to customize it via next.config\n            if (cacheEntry.cacheControl && !res.getHeader('Cache-Control') && !headers.get('Cache-Control')) {\n                headers.set('Cache-Control', (0,next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_12__.getCacheControlHeader)(cacheEntry.cacheControl));\n            }\n            await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, new Response(cacheEntry.value.body, {\n                headers,\n                status: cacheEntry.value.status || 200\n            }));\n            return null;\n        };\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await handleResponse(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__.BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__.SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, handleResponse));\n        }\n    } catch (err) {\n        // if we aren't wrapped by base-server handle here\n        if (!activeSpan) {\n            await routeModule.onRequestError(req, err, {\n                routerKind: 'App Router',\n                routePath: normalizedSrcPage,\n                routeType: 'route',\n                revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__.getRevalidateReason)({\n                    isRevalidate,\n                    isOnDemandRevalidate\n                })\n            });\n        }\n        // rethrow so that we can handle serving error page\n        // If this is during static generation, throw the error again.\n        if (isIsr) throw err;\n        // Otherwise, send a 500 response.\n        await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, new Response(null, {\n            status: 500\n        }));\n        return null;\n    }\n}\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fauth%2F%5B...nextauth%5D%2Froute&page=%2Fapi%2Fauth%2F%5B...nextauth%5D%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fauth%2F%5B...nextauth%5D%2Froute.ts&appDir=%2FUsers%2Fmacbook%2FDesktop%2Fpersonal-workspace%2Fcivix-sql%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fmacbook%2FDesktop%2Fpersonal-workspace%2Fcivix-sql&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "./work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("buffer");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("events");

/***/ }),

/***/ "net":
/*!**********************!*\
  !*** external "net" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("net");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "next/dist/shared/lib/no-fallback-error.external":
/*!******************************************************************!*\
  !*** external "next/dist/shared/lib/no-fallback-error.external" ***!
  \******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/no-fallback-error.external");

/***/ }),

/***/ "next/dist/shared/lib/router/utils/app-paths":
/*!**************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/app-paths" ***!
  \**************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/app-paths");

/***/ }),

/***/ "process":
/*!**************************!*\
  !*** external "process" ***!
  \**************************/
/***/ ((module) => {

"use strict";
module.exports = require("process");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ "string_decoder":
/*!*********************************!*\
  !*** external "string_decoder" ***!
  \*********************************/
/***/ ((module) => {

"use strict";
module.exports = require("string_decoder");

/***/ }),

/***/ "timers":
/*!*************************!*\
  !*** external "timers" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("timers");

/***/ }),

/***/ "tls":
/*!**********************!*\
  !*** external "tls" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("tls");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("util");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@opentelemetry","vendor-chunks/@auth","vendor-chunks/next-auth","vendor-chunks/mysql2","vendor-chunks/iconv-lite","vendor-chunks/aws-ssl-profiles","vendor-chunks/sqlstring","vendor-chunks/seq-queue","vendor-chunks/bcryptjs","vendor-chunks/lru-cache","vendor-chunks/long","vendor-chunks/safer-buffer","vendor-chunks/named-placeholders","vendor-chunks/lru.min","vendor-chunks/is-property","vendor-chunks/generate-function","vendor-chunks/denque"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fauth%2F%5B...nextauth%5D%2Froute&page=%2Fapi%2Fauth%2F%5B...nextauth%5D%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fauth%2F%5B...nextauth%5D%2Froute.ts&appDir=%2FUsers%2Fmacbook%2FDesktop%2Fpersonal-workspace%2Fcivix-sql%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fmacbook%2FDesktop%2Fpersonal-workspace%2Fcivix-sql&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!")));
module.exports = __webpack_exports__;

})();