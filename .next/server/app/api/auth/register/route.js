/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/auth/register/route";
exports.ids = ["app/api/auth/register/route"];
exports.modules = {

/***/ "(rsc)/./app/api/auth/register/route.ts":
/*!****************************************!*\
  !*** ./app/api/auth/register/route.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_db__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/db */ \"(rsc)/./lib/db.ts\");\n/* harmony import */ var _models_User__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/models/User */ \"(rsc)/./models/User.ts\");\n/* harmony import */ var _lib_logger__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/logger */ \"(rsc)/./lib/logger.ts\");\n/* harmony import */ var _lib_services_email__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/lib/services/email */ \"(rsc)/./lib/services/email.ts\");\n\n\n\n\n\nconst logger = (0,_lib_logger__WEBPACK_IMPORTED_MODULE_3__.createNamespaceLogger)('api:auth:register');\nasync function POST(request) {\n    try {\n        logger.info('Processing registration request');\n        await (0,_lib_db__WEBPACK_IMPORTED_MODULE_1__[\"default\"])();\n        const { name, email, password, phone } = await request.json();\n        // Validate input\n        if (!name || !email || !password) {\n            logger.warn('Registration attempt with missing required fields');\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: 'Name, email, and password are required'\n            }, {\n                status: 400\n            });\n        }\n        // Check if email is already in use\n        logger.debug('Checking if email exists', {\n            email\n        });\n        const existingUser = await _models_User__WEBPACK_IMPORTED_MODULE_2__[\"default\"].findOne({\n            email\n        });\n        if (existingUser) {\n            logger.warn('Registration attempt with existing email', {\n                email\n            });\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: 'Email is already in use'\n            }, {\n                status: 400\n            });\n        }\n        // Validate password strength\n        if (password.length < 8) {\n            logger.warn('Registration attempt with weak password', {\n                email\n            });\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: 'Password must be at least 8 characters long'\n            }, {\n                status: 400\n            });\n        }\n        // Create new user (password will be hashed by the User model pre-save hook)\n        const newUser = new _models_User__WEBPACK_IMPORTED_MODULE_2__[\"default\"]({\n            name,\n            email,\n            password: password,\n            role: 'USER',\n            phone,\n            isActive: true,\n            createdAt: new Date(),\n            updatedAt: new Date(),\n            settings: {\n                notifications: {\n                    email: true,\n                    sms: false,\n                    marketing: false,\n                    reminders: true\n                },\n                appearance: {\n                    theme: 'system',\n                    fontSize: 'medium',\n                    reduceAnimations: false,\n                    highContrast: false\n                },\n                privacy: {\n                    profileVisibility: 'public',\n                    shareBookingHistory: false,\n                    shareContactInfo: false,\n                    allowDataCollection: true\n                }\n            }\n        });\n        await newUser.save();\n        logger.info('User registered successfully', {\n            userId: newUser._id,\n            email\n        });\n        // Send welcome email\n        try {\n            const emailSent = await (0,_lib_services_email__WEBPACK_IMPORTED_MODULE_4__.sendWelcomeEmail)(email, name);\n            if (emailSent) {\n                logger.info('Welcome email sent successfully', {\n                    email\n                });\n            } else {\n                logger.warn('Failed to send welcome email', {\n                    email\n                });\n            }\n        } catch (emailError) {\n            logger.error('Error sending welcome email', {\n                email,\n                error: emailError instanceof Error ? emailError.message : String(emailError)\n            });\n        // Continue with registration even if email fails\n        }\n        // Return success response\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            message: 'User registered successfully',\n            data: {\n                id: newUser._id,\n                name: newUser.name,\n                email: newUser.email,\n                role: newUser.role\n            }\n        }, {\n            status: 201\n        });\n    } catch (error) {\n        logger.error('Error during registration', {\n            error: error instanceof Error ? error.message : String(error)\n        });\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: 'Internal server error'\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/auth/register/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/db.ts":
/*!*******************!*\
  !*** ./lib/db.ts ***!
  \*******************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   disconnectDB: () => (/* binding */ disconnectDB),\n/* harmony export */   getConnectionStatus: () => (/* binding */ getConnectionStatus)\n/* harmony export */ });\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongoose */ \"mongoose\");\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mongoose__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./logger */ \"(rsc)/./lib/logger.ts\");\n\n\n// ---\n// CIVIX AGENT MODE: Bulletproof MongoDB Connection for Next.js\n// 1. Always await connectDB() in every API/server function before DB ops!\n// 2. Write/seed data to make DB appear in Compass.\n// 3. .env.local: MONGODB_URI=mongodb://localhost:27017/civix_fInal_production\n// 4. Add logs before/after DB ops for visibility.\n// ---\nconst dbLogger = (0,_logger__WEBPACK_IMPORTED_MODULE_1__.createNamespaceLogger)('database');\n// Use env var or fallback to local MongoDB\nconst MONGODB_URI = process.env.MONGODB_URI || 'mongodb://localhost:27017/civix_fInal_production';\n// Track connection status\nlet isConnected = false;\nlet connectionAttempts = 0;\nconst MAX_RECONNECT_ATTEMPTS = 5;\n// Debug: Show env and URI (sanitized)\nconsole.debug(`[DB] NODE_ENV: ${\"development\"}`);\nconsole.debug(`[DB] Raw MONGODB_URI: ${MONGODB_URI}`);\ntry {\n    const sanitizedUri = MONGODB_URI.replace(/(mongodb\\+srv:\\/\\/[^:]+:)([^@]+)(@.+)/, '$1*****$3');\n    dbLogger.info(`Using MongoDB URI: ${sanitizedUri}`);\n    console.debug(`[DB] Using MongoDB URI (sanitized): ${sanitizedUri}`);\n} catch (error) {\n    dbLogger.warn('Could not sanitize MongoDB URI for logging');\n    console.warn('[DB] Could not sanitize MongoDB URI for logging');\n}\nconst isServer = \"undefined\" === 'undefined';\nconsole.debug(`[DB] isServer: ${isServer}`);\nconst cached = isServer && global.mongoose ? global.mongoose : {\n    conn: null,\n    promise: null\n};\nif (isServer && !global.mongoose) {\n    global.mongoose = cached;\n    console.debug('[DB] Initialized global.mongoose cache');\n}\n// Setup listeners for connection events\nfunction setupMongooseListeners() {\n    mongoose__WEBPACK_IMPORTED_MODULE_0___default().connection.on('connected', ()=>{\n        isConnected = true;\n        connectionAttempts = 0;\n        dbLogger.info('MongoDB connected successfully');\n        console.log('✅ MongoDB connected successfully');\n        console.log(`[DB] Database: ${(mongoose__WEBPACK_IMPORTED_MODULE_0___default().connection).db?.databaseName || 'unknown'}`);\n        console.log(`[DB] Host: ${(mongoose__WEBPACK_IMPORTED_MODULE_0___default().connection).host}`);\n        console.log(`[DB] Port: ${(mongoose__WEBPACK_IMPORTED_MODULE_0___default().connection).port}`);\n    });\n    mongoose__WEBPACK_IMPORTED_MODULE_0___default().connection.on('error', (error)=>{\n        isConnected = false;\n        dbLogger.error('MongoDB connection error', {\n            error: error.message\n        });\n        console.error('❌ MongoDB connection error:', error.message);\n    });\n    mongoose__WEBPACK_IMPORTED_MODULE_0___default().connection.on('disconnected', ()=>{\n        isConnected = false;\n        dbLogger.warn('MongoDB disconnected');\n        console.warn('⚠️ MongoDB disconnected');\n    });\n    mongoose__WEBPACK_IMPORTED_MODULE_0___default().connection.on('reconnected', ()=>{\n        isConnected = true;\n        dbLogger.info('MongoDB reconnected');\n        console.log('🔄 MongoDB reconnected');\n    });\n    mongoose__WEBPACK_IMPORTED_MODULE_0___default().connection.on('close', ()=>{\n        isConnected = false;\n        dbLogger.info('MongoDB connection closed');\n        console.log('🔒 MongoDB connection closed');\n    });\n}\nsetupMongooseListeners();\n// ---\n// The one function you must always await before any DB op!\nasync function connectDB() {\n    if (!isServer) {\n        console.error('[DB] Attempted to connect to DB on client side');\n        throw new Error('Database connection is only available on the server side');\n    }\n    if (cached.conn && isConnected) {\n        dbLogger.debug('Using existing database connection');\n        console.debug('[DB] Using existing database connection');\n        return cached.conn;\n    }\n    if (cached.promise) {\n        console.debug('[DB] Awaiting existing connection promise');\n        try {\n            cached.conn = await cached.promise;\n            return cached.conn;\n        } catch (error) {\n            cached.promise = null;\n            console.error('[DB] Error while awaiting connection promise:', error);\n            throw error;\n        }\n    }\n    // Connection options\n    const opts = {\n        bufferCommands: false,\n        maxPoolSize: 10,\n        serverSelectionTimeoutMS: 10000,\n        socketTimeoutMS: 45000,\n        connectTimeoutMS: 10000,\n        retryWrites: true,\n        retryReads: true\n    };\n    dbLogger.info('Connecting to MongoDB...');\n    console.log('[DB] MongoDB connection attempt - check if MongoDB is running locally');\n    console.debug(`[DB] Connection options: ${JSON.stringify(opts)}`);\n    const mongoUri = MONGODB_URI;\n    console.debug(`[DB] Connecting with URI: ${mongoUri.replace(/(mongodb\\+srv:\\/\\/[^:]+:)([^@]+)(@.+)/, '$1*****$3')}`);\n    cached.promise = mongoose__WEBPACK_IMPORTED_MODULE_0___default().connect(mongoUri, opts).then((mongooseInstance)=>{\n        dbLogger.info('Successfully connected to MongoDB');\n        console.log('✅ MongoDB connected successfully');\n        console.log(`[DB] Database: ${mongooseInstance.connection.db?.databaseName || 'unknown'}`);\n        console.log(`[DB] Host: ${mongooseInstance.connection.host}`);\n        console.log(`[DB] Port: ${mongooseInstance.connection.port}`);\n        return mongooseInstance;\n    }).catch((error)=>{\n        connectionAttempts++;\n        console.error(`❌ MongoDB connection error (attempt ${connectionAttempts}/${MAX_RECONNECT_ATTEMPTS}):`, error.message);\n        dbLogger.error('MongoDB connection error', {\n            error: error.message,\n            attempt: connectionAttempts,\n            maxAttempts: MAX_RECONNECT_ATTEMPTS,\n            stack:  true ? error.stack : 0\n        });\n        cached.promise = null;\n        // Helpful error hints\n        if (error.message.includes('ECONNREFUSED')) {\n            console.error('💡 MongoDB is not running. Please start MongoDB:');\n            console.error('   • Windows: Start MongoDB service or run mongod');\n            console.error('   • macOS: brew services start mongodb-community');\n            console.error('   • Linux: sudo systemctl start mongod');\n        } else if (error.message.includes('ENOTFOUND')) {\n            console.error('💡 Cannot resolve MongoDB host. Check your MONGODB_URI');\n        } else if (error.message.includes('Authentication failed')) {\n            console.error('💡 Authentication failed. Check your MongoDB credentials');\n        }\n        throw error;\n    });\n    try {\n        cached.conn = await cached.promise;\n        console.debug('[DB] Database connection established and cached');\n        return cached.conn;\n    } catch (error) {\n        cached.promise = null;\n        console.error('[DB] Error while awaiting connection promise:', error);\n        throw error;\n    }\n}\n// ---\n// Utility: Get connection status (for debugging/monitoring)\nfunction getConnectionStatus() {\n    return {\n        isConnected,\n        connectionAttempts,\n        databaseName: (mongoose__WEBPACK_IMPORTED_MODULE_0___default().connection).db?.databaseName,\n        host: (mongoose__WEBPACK_IMPORTED_MODULE_0___default().connection).host,\n        port: (mongoose__WEBPACK_IMPORTED_MODULE_0___default().connection).port,\n        readyState: (mongoose__WEBPACK_IMPORTED_MODULE_0___default().connection).readyState\n    };\n}\n// Utility: Disconnect (for tests/dev)\nasync function disconnectDB() {\n    if (isConnected) {\n        await mongoose__WEBPACK_IMPORTED_MODULE_0___default().connection.close();\n        cached.conn = null;\n        cached.promise = null;\n        isConnected = false;\n        console.log('🔒 MongoDB connection closed');\n    }\n}\n// ---\n// Always: await connectDB() before any DB operation in your API/server code!\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (connectDB);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/db.ts\n");

/***/ }),

/***/ "(rsc)/./lib/logger.ts":
/*!***********************!*\
  !*** ./lib/logger.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createNamespaceLogger: () => (/* binding */ createNamespaceLogger),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   logger: () => (/* binding */ logger)\n/* harmony export */ });\n/**\n * Logger utility for the application\n */ /**\n * Simple logger for the application\n * In a production environment, this would be replaced with a more robust solution\n * like winston, pino, or other logging libraries\n */ class Logger {\n    /**\n   * Log a debug message\n   * @param message - The message to log\n   * @param payload - Optional additional data to log\n   */ debug(message, payload) {\n        this.log('debug', {\n            message,\n            ...payload\n        });\n    }\n    /**\n   * Log an informational message\n   * @param message - The message to log\n   * @param payload - Optional additional data to log\n   */ info(message, payload) {\n        this.log('info', {\n            message,\n            ...payload\n        });\n    }\n    /**\n   * Log a warning message\n   * @param message - The message to log\n   * @param payload - Optional additional data to log\n   */ warn(message, payload) {\n        this.log('warn', {\n            message,\n            ...payload\n        });\n    }\n    /**\n   * Log an error message\n   * @param message - The message to log\n   * @param payload - Optional additional data to log\n   */ error(message, payload) {\n        this.log('error', {\n            message,\n            ...payload\n        });\n    }\n    /**\n   * Log a message with a specific log level\n   * @param level - The log level\n   * @param payload - The data to log\n   */ log(level, payload) {\n        // Skip logging in test environment\n        if (this.isTest) {\n            return;\n        }\n        // In development, pretty print the log\n        if (this.isDevelopment) {\n            const timestamp = new Date().toISOString();\n            const { message, ...data } = payload;\n            switch(level){\n                case 'debug':\n                    // eslint-disable-next-line no-console\n                    console.debug(`[${timestamp}] 🐛 DEBUG: ${message}`, Object.keys(data).length ? data : '');\n                    break;\n                case 'info':\n                    // eslint-disable-next-line no-console\n                    console.info(`[${timestamp}] ℹ️ INFO: ${message}`, Object.keys(data).length ? data : '');\n                    break;\n                case 'warn':\n                    // eslint-disable-next-line no-console\n                    console.warn(`[${timestamp}] ⚠️ WARN: ${message}`, Object.keys(data).length ? data : '');\n                    break;\n                case 'error':\n                    // eslint-disable-next-line no-console\n                    console.error(`[${timestamp}] 🔴 ERROR: ${message}`, Object.keys(data).length ? data : '');\n                    break;\n            }\n            return;\n        }\n        // In production, use structured logging (JSON format)\n        const logData = {\n            timestamp: new Date().toISOString(),\n            level,\n            ...payload\n        };\n        // In production we would typically use a more robust logging solution\n        // This is a simple fallback\n        switch(level){\n            case 'debug':\n                // eslint-disable-next-line no-console\n                console.debug(JSON.stringify(logData));\n                break;\n            case 'info':\n                // eslint-disable-next-line no-console\n                console.info(JSON.stringify(logData));\n                break;\n            case 'warn':\n                // eslint-disable-next-line no-console\n                console.warn(JSON.stringify(logData));\n                break;\n            case 'error':\n                // eslint-disable-next-line no-console\n                console.error(JSON.stringify(logData));\n                break;\n        }\n    }\n    constructor(){\n        this.isDevelopment = \"development\" === 'development';\n        this.isTest = \"development\" === 'test';\n    }\n}\n// Create a singleton logger instance\nconst logger = new Logger();\n/**\n * Create a namespace logger that includes a namespace in all logs\n * @param namespace - The namespace to include in logs\n */ const createNamespaceLogger = (namespace)=>{\n    return {\n        debug: (message, payload)=>logger.debug(message, {\n                namespace,\n                ...payload\n            }),\n        info: (message, payload)=>logger.info(message, {\n                namespace,\n                ...payload\n            }),\n        warn: (message, payload)=>logger.warn(message, {\n                namespace,\n                ...payload\n            }),\n        error: (message, payload)=>logger.error(message, {\n                namespace,\n                ...payload\n            })\n    };\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (logger);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvbG9nZ2VyLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOztDQUVDLEdBU0Q7Ozs7Q0FJQyxHQUNELE1BQU1BO0lBSUo7Ozs7R0FJQyxHQUNEQyxNQUFNQyxPQUFlLEVBQUVDLE9BQWlDLEVBQVE7UUFDOUQsSUFBSSxDQUFDQyxHQUFHLENBQUMsU0FBUztZQUFFRjtZQUFTLEdBQUdDLE9BQU87UUFBQztJQUMxQztJQUVBOzs7O0dBSUMsR0FDREUsS0FBS0gsT0FBZSxFQUFFQyxPQUFpQyxFQUFRO1FBQzdELElBQUksQ0FBQ0MsR0FBRyxDQUFDLFFBQVE7WUFBRUY7WUFBUyxHQUFHQyxPQUFPO1FBQUM7SUFDekM7SUFFQTs7OztHQUlDLEdBQ0RHLEtBQUtKLE9BQWUsRUFBRUMsT0FBaUMsRUFBUTtRQUM3RCxJQUFJLENBQUNDLEdBQUcsQ0FBQyxRQUFRO1lBQUVGO1lBQVMsR0FBR0MsT0FBTztRQUFDO0lBQ3pDO0lBRUE7Ozs7R0FJQyxHQUNESSxNQUFNTCxPQUFlLEVBQUVDLE9BQWlDLEVBQVE7UUFDOUQsSUFBSSxDQUFDQyxHQUFHLENBQUMsU0FBUztZQUFFRjtZQUFTLEdBQUdDLE9BQU87UUFBQztJQUMxQztJQUVBOzs7O0dBSUMsR0FDRCxJQUFZSyxLQUFlLEVBQUVMLE9BQW1CLEVBQVE7UUFDdEQsbUNBQW1DO1FBQ25DLElBQUksSUFBSSxDQUFDTSxNQUFNLEVBQUU7WUFDZjtRQUNGO1FBRUEsdUNBQXVDO1FBQ3ZDLElBQUksSUFBSSxDQUFDQyxhQUFhLEVBQUU7WUFDdEIsTUFBTUMsWUFBWSxJQUFJQyxPQUFPQyxXQUFXO1lBQ3hDLE1BQU0sRUFBRVgsT0FBTyxFQUFFLEdBQUdZLE1BQU0sR0FBR1g7WUFFN0IsT0FBUUs7Z0JBQ04sS0FBSztvQkFDSCxzQ0FBc0M7b0JBQ3RDTyxRQUFRZCxLQUFLLENBQUMsQ0FBQyxDQUFDLEVBQUVVLFVBQVUsWUFBWSxFQUFFVCxTQUFTLEVBQUVjLE9BQU9DLElBQUksQ0FBQ0gsTUFBTUksTUFBTSxHQUFHSixPQUFPO29CQUN2RjtnQkFDRixLQUFLO29CQUNILHNDQUFzQztvQkFDdENDLFFBQVFWLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRU0sVUFBVSxXQUFXLEVBQUVULFNBQVMsRUFBRWMsT0FBT0MsSUFBSSxDQUFDSCxNQUFNSSxNQUFNLEdBQUdKLE9BQU87b0JBQ3JGO2dCQUNGLEtBQUs7b0JBQ0gsc0NBQXNDO29CQUN0Q0MsUUFBUVQsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUFFSyxVQUFVLFdBQVcsRUFBRVQsU0FBUyxFQUFFYyxPQUFPQyxJQUFJLENBQUNILE1BQU1JLE1BQU0sR0FBR0osT0FBTztvQkFDckY7Z0JBQ0YsS0FBSztvQkFDSCxzQ0FBc0M7b0JBQ3RDQyxRQUFRUixLQUFLLENBQUMsQ0FBQyxDQUFDLEVBQUVJLFVBQVUsWUFBWSxFQUFFVCxTQUFTLEVBQUVjLE9BQU9DLElBQUksQ0FBQ0gsTUFBTUksTUFBTSxHQUFHSixPQUFPO29CQUN2RjtZQUNKO1lBQ0E7UUFDRjtRQUVBLHNEQUFzRDtRQUN0RCxNQUFNSyxVQUFVO1lBQ2RSLFdBQVcsSUFBSUMsT0FBT0MsV0FBVztZQUNqQ0w7WUFDQSxHQUFHTCxPQUFPO1FBQ1o7UUFFQSxzRUFBc0U7UUFDdEUsNEJBQTRCO1FBQzVCLE9BQVFLO1lBQ04sS0FBSztnQkFDSCxzQ0FBc0M7Z0JBQ3RDTyxRQUFRZCxLQUFLLENBQUNtQixLQUFLQyxTQUFTLENBQUNGO2dCQUM3QjtZQUNGLEtBQUs7Z0JBQ0gsc0NBQXNDO2dCQUN0Q0osUUFBUVYsSUFBSSxDQUFDZSxLQUFLQyxTQUFTLENBQUNGO2dCQUM1QjtZQUNGLEtBQUs7Z0JBQ0gsc0NBQXNDO2dCQUN0Q0osUUFBUVQsSUFBSSxDQUFDYyxLQUFLQyxTQUFTLENBQUNGO2dCQUM1QjtZQUNGLEtBQUs7Z0JBQ0gsc0NBQXNDO2dCQUN0Q0osUUFBUVIsS0FBSyxDQUFDYSxLQUFLQyxTQUFTLENBQUNGO2dCQUM3QjtRQUNKO0lBQ0Y7O2FBdkdRVCxnQkFBZ0JZLGtCQUF5QjthQUN6Q2IsU0FBU2Esa0JBQXlCOztBQXVHNUM7QUFFQSxxQ0FBcUM7QUFDOUIsTUFBTUMsU0FBUyxJQUFJdkIsU0FBUztBQUVuQzs7O0NBR0MsR0FDTSxNQUFNd0Isd0JBQXdCLENBQUNDO0lBQ3BDLE9BQU87UUFDTHhCLE9BQU8sQ0FBQ0MsU0FBaUJDLFVBQXNDb0IsT0FBT3RCLEtBQUssQ0FBQ0MsU0FBUztnQkFBRXVCO2dCQUFXLEdBQUd0QixPQUFPO1lBQUM7UUFDN0dFLE1BQU0sQ0FBQ0gsU0FBaUJDLFVBQXNDb0IsT0FBT2xCLElBQUksQ0FBQ0gsU0FBUztnQkFBRXVCO2dCQUFXLEdBQUd0QixPQUFPO1lBQUM7UUFDM0dHLE1BQU0sQ0FBQ0osU0FBaUJDLFVBQXNDb0IsT0FBT2pCLElBQUksQ0FBQ0osU0FBUztnQkFBRXVCO2dCQUFXLEdBQUd0QixPQUFPO1lBQUM7UUFDM0dJLE9BQU8sQ0FBQ0wsU0FBaUJDLFVBQXNDb0IsT0FBT2hCLEtBQUssQ0FBQ0wsU0FBUztnQkFBRXVCO2dCQUFXLEdBQUd0QixPQUFPO1lBQUM7SUFDL0c7QUFDRixFQUFFO0FBRUYsaUVBQWVvQixNQUFNQSxFQUFDIiwic291cmNlcyI6WyIvVXNlcnMvbWFjYm9vay9EZXNrdG9wL3BlcnNvbmFsLXdvcmtzcGFjZS9jaXZpeC9saWIvbG9nZ2VyLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogTG9nZ2VyIHV0aWxpdHkgZm9yIHRoZSBhcHBsaWNhdGlvblxuICovXG5cbnR5cGUgTG9nTGV2ZWwgPSAnZGVidWcnIHwgJ2luZm8nIHwgJ3dhcm4nIHwgJ2Vycm9yJztcblxuaW50ZXJmYWNlIExvZ1BheWxvYWQge1xuICBtZXNzYWdlOiBzdHJpbmc7XG4gIFtrZXk6IHN0cmluZ106IHVua25vd247XG59XG5cbi8qKlxuICogU2ltcGxlIGxvZ2dlciBmb3IgdGhlIGFwcGxpY2F0aW9uXG4gKiBJbiBhIHByb2R1Y3Rpb24gZW52aXJvbm1lbnQsIHRoaXMgd291bGQgYmUgcmVwbGFjZWQgd2l0aCBhIG1vcmUgcm9idXN0IHNvbHV0aW9uXG4gKiBsaWtlIHdpbnN0b24sIHBpbm8sIG9yIG90aGVyIGxvZ2dpbmcgbGlicmFyaWVzXG4gKi9cbmNsYXNzIExvZ2dlciB7XG4gIHByaXZhdGUgaXNEZXZlbG9wbWVudCA9IHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAnZGV2ZWxvcG1lbnQnO1xuICBwcml2YXRlIGlzVGVzdCA9IHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAndGVzdCc7XG5cbiAgLyoqXG4gICAqIExvZyBhIGRlYnVnIG1lc3NhZ2VcbiAgICogQHBhcmFtIG1lc3NhZ2UgLSBUaGUgbWVzc2FnZSB0byBsb2dcbiAgICogQHBhcmFtIHBheWxvYWQgLSBPcHRpb25hbCBhZGRpdGlvbmFsIGRhdGEgdG8gbG9nXG4gICAqL1xuICBkZWJ1ZyhtZXNzYWdlOiBzdHJpbmcsIHBheWxvYWQ/OiBSZWNvcmQ8c3RyaW5nLCB1bmtub3duPik6IHZvaWQge1xuICAgIHRoaXMubG9nKCdkZWJ1ZycsIHsgbWVzc2FnZSwgLi4ucGF5bG9hZCB9KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBMb2cgYW4gaW5mb3JtYXRpb25hbCBtZXNzYWdlXG4gICAqIEBwYXJhbSBtZXNzYWdlIC0gVGhlIG1lc3NhZ2UgdG8gbG9nXG4gICAqIEBwYXJhbSBwYXlsb2FkIC0gT3B0aW9uYWwgYWRkaXRpb25hbCBkYXRhIHRvIGxvZ1xuICAgKi9cbiAgaW5mbyhtZXNzYWdlOiBzdHJpbmcsIHBheWxvYWQ/OiBSZWNvcmQ8c3RyaW5nLCB1bmtub3duPik6IHZvaWQge1xuICAgIHRoaXMubG9nKCdpbmZvJywgeyBtZXNzYWdlLCAuLi5wYXlsb2FkIH0pO1xuICB9XG5cbiAgLyoqXG4gICAqIExvZyBhIHdhcm5pbmcgbWVzc2FnZVxuICAgKiBAcGFyYW0gbWVzc2FnZSAtIFRoZSBtZXNzYWdlIHRvIGxvZ1xuICAgKiBAcGFyYW0gcGF5bG9hZCAtIE9wdGlvbmFsIGFkZGl0aW9uYWwgZGF0YSB0byBsb2dcbiAgICovXG4gIHdhcm4obWVzc2FnZTogc3RyaW5nLCBwYXlsb2FkPzogUmVjb3JkPHN0cmluZywgdW5rbm93bj4pOiB2b2lkIHtcbiAgICB0aGlzLmxvZygnd2FybicsIHsgbWVzc2FnZSwgLi4ucGF5bG9hZCB9KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBMb2cgYW4gZXJyb3IgbWVzc2FnZVxuICAgKiBAcGFyYW0gbWVzc2FnZSAtIFRoZSBtZXNzYWdlIHRvIGxvZ1xuICAgKiBAcGFyYW0gcGF5bG9hZCAtIE9wdGlvbmFsIGFkZGl0aW9uYWwgZGF0YSB0byBsb2dcbiAgICovXG4gIGVycm9yKG1lc3NhZ2U6IHN0cmluZywgcGF5bG9hZD86IFJlY29yZDxzdHJpbmcsIHVua25vd24+KTogdm9pZCB7XG4gICAgdGhpcy5sb2coJ2Vycm9yJywgeyBtZXNzYWdlLCAuLi5wYXlsb2FkIH0pO1xuICB9XG5cbiAgLyoqXG4gICAqIExvZyBhIG1lc3NhZ2Ugd2l0aCBhIHNwZWNpZmljIGxvZyBsZXZlbFxuICAgKiBAcGFyYW0gbGV2ZWwgLSBUaGUgbG9nIGxldmVsXG4gICAqIEBwYXJhbSBwYXlsb2FkIC0gVGhlIGRhdGEgdG8gbG9nXG4gICAqL1xuICBwcml2YXRlIGxvZyhsZXZlbDogTG9nTGV2ZWwsIHBheWxvYWQ6IExvZ1BheWxvYWQpOiB2b2lkIHtcbiAgICAvLyBTa2lwIGxvZ2dpbmcgaW4gdGVzdCBlbnZpcm9ubWVudFxuICAgIGlmICh0aGlzLmlzVGVzdCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIC8vIEluIGRldmVsb3BtZW50LCBwcmV0dHkgcHJpbnQgdGhlIGxvZ1xuICAgIGlmICh0aGlzLmlzRGV2ZWxvcG1lbnQpIHtcbiAgICAgIGNvbnN0IHRpbWVzdGFtcCA9IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKTtcbiAgICAgIGNvbnN0IHsgbWVzc2FnZSwgLi4uZGF0YSB9ID0gcGF5bG9hZDtcbiAgICAgIFxuICAgICAgc3dpdGNoIChsZXZlbCkge1xuICAgICAgICBjYXNlICdkZWJ1Zyc6XG4gICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGVcbiAgICAgICAgICBjb25zb2xlLmRlYnVnKGBbJHt0aW1lc3RhbXB9XSDwn5CbIERFQlVHOiAke21lc3NhZ2V9YCwgT2JqZWN0LmtleXMoZGF0YSkubGVuZ3RoID8gZGF0YSA6ICcnKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAnaW5mbyc6XG4gICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGVcbiAgICAgICAgICBjb25zb2xlLmluZm8oYFske3RpbWVzdGFtcH1dIOKEue+4jyBJTkZPOiAke21lc3NhZ2V9YCwgT2JqZWN0LmtleXMoZGF0YSkubGVuZ3RoID8gZGF0YSA6ICcnKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAnd2Fybic6XG4gICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGVcbiAgICAgICAgICBjb25zb2xlLndhcm4oYFske3RpbWVzdGFtcH1dIOKaoO+4jyBXQVJOOiAke21lc3NhZ2V9YCwgT2JqZWN0LmtleXMoZGF0YSkubGVuZ3RoID8gZGF0YSA6ICcnKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAnZXJyb3InOlxuICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlXG4gICAgICAgICAgY29uc29sZS5lcnJvcihgWyR7dGltZXN0YW1wfV0g8J+UtCBFUlJPUjogJHttZXNzYWdlfWAsIE9iamVjdC5rZXlzKGRhdGEpLmxlbmd0aCA/IGRhdGEgOiAnJyk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgLy8gSW4gcHJvZHVjdGlvbiwgdXNlIHN0cnVjdHVyZWQgbG9nZ2luZyAoSlNPTiBmb3JtYXQpXG4gICAgY29uc3QgbG9nRGF0YSA9IHtcbiAgICAgIHRpbWVzdGFtcDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLFxuICAgICAgbGV2ZWwsXG4gICAgICAuLi5wYXlsb2FkLFxuICAgIH07XG5cbiAgICAvLyBJbiBwcm9kdWN0aW9uIHdlIHdvdWxkIHR5cGljYWxseSB1c2UgYSBtb3JlIHJvYnVzdCBsb2dnaW5nIHNvbHV0aW9uXG4gICAgLy8gVGhpcyBpcyBhIHNpbXBsZSBmYWxsYmFja1xuICAgIHN3aXRjaCAobGV2ZWwpIHtcbiAgICAgIGNhc2UgJ2RlYnVnJzpcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGVcbiAgICAgICAgY29uc29sZS5kZWJ1ZyhKU09OLnN0cmluZ2lmeShsb2dEYXRhKSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnaW5mbyc6XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlXG4gICAgICAgIGNvbnNvbGUuaW5mbyhKU09OLnN0cmluZ2lmeShsb2dEYXRhKSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnd2Fybic6XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlXG4gICAgICAgIGNvbnNvbGUud2FybihKU09OLnN0cmluZ2lmeShsb2dEYXRhKSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnZXJyb3InOlxuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc29sZVxuICAgICAgICBjb25zb2xlLmVycm9yKEpTT04uc3RyaW5naWZ5KGxvZ0RhdGEpKTtcbiAgICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG59XG5cbi8vIENyZWF0ZSBhIHNpbmdsZXRvbiBsb2dnZXIgaW5zdGFuY2VcbmV4cG9ydCBjb25zdCBsb2dnZXIgPSBuZXcgTG9nZ2VyKCk7XG5cbi8qKlxuICogQ3JlYXRlIGEgbmFtZXNwYWNlIGxvZ2dlciB0aGF0IGluY2x1ZGVzIGEgbmFtZXNwYWNlIGluIGFsbCBsb2dzXG4gKiBAcGFyYW0gbmFtZXNwYWNlIC0gVGhlIG5hbWVzcGFjZSB0byBpbmNsdWRlIGluIGxvZ3NcbiAqL1xuZXhwb3J0IGNvbnN0IGNyZWF0ZU5hbWVzcGFjZUxvZ2dlciA9IChuYW1lc3BhY2U6IHN0cmluZykgPT4ge1xuICByZXR1cm4ge1xuICAgIGRlYnVnOiAobWVzc2FnZTogc3RyaW5nLCBwYXlsb2FkPzogUmVjb3JkPHN0cmluZywgdW5rbm93bj4pID0+IGxvZ2dlci5kZWJ1ZyhtZXNzYWdlLCB7IG5hbWVzcGFjZSwgLi4ucGF5bG9hZCB9KSxcbiAgICBpbmZvOiAobWVzc2FnZTogc3RyaW5nLCBwYXlsb2FkPzogUmVjb3JkPHN0cmluZywgdW5rbm93bj4pID0+IGxvZ2dlci5pbmZvKG1lc3NhZ2UsIHsgbmFtZXNwYWNlLCAuLi5wYXlsb2FkIH0pLFxuICAgIHdhcm46IChtZXNzYWdlOiBzdHJpbmcsIHBheWxvYWQ/OiBSZWNvcmQ8c3RyaW5nLCB1bmtub3duPikgPT4gbG9nZ2VyLndhcm4obWVzc2FnZSwgeyBuYW1lc3BhY2UsIC4uLnBheWxvYWQgfSksXG4gICAgZXJyb3I6IChtZXNzYWdlOiBzdHJpbmcsIHBheWxvYWQ/OiBSZWNvcmQ8c3RyaW5nLCB1bmtub3duPikgPT4gbG9nZ2VyLmVycm9yKG1lc3NhZ2UsIHsgbmFtZXNwYWNlLCAuLi5wYXlsb2FkIH0pLFxuICB9O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgbG9nZ2VyOyAiXSwibmFtZXMiOlsiTG9nZ2VyIiwiZGVidWciLCJtZXNzYWdlIiwicGF5bG9hZCIsImxvZyIsImluZm8iLCJ3YXJuIiwiZXJyb3IiLCJsZXZlbCIsImlzVGVzdCIsImlzRGV2ZWxvcG1lbnQiLCJ0aW1lc3RhbXAiLCJEYXRlIiwidG9JU09TdHJpbmciLCJkYXRhIiwiY29uc29sZSIsIk9iamVjdCIsImtleXMiLCJsZW5ndGgiLCJsb2dEYXRhIiwiSlNPTiIsInN0cmluZ2lmeSIsInByb2Nlc3MiLCJsb2dnZXIiLCJjcmVhdGVOYW1lc3BhY2VMb2dnZXIiLCJuYW1lc3BhY2UiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./lib/logger.ts\n");

/***/ }),

/***/ "(rsc)/./lib/services/email.ts":
/*!*******************************!*\
  !*** ./lib/services/email.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   sendAgentNotificationEmail: () => (/* binding */ sendAgentNotificationEmail),\n/* harmony export */   sendBookingConfirmationEmail: () => (/* binding */ sendBookingConfirmationEmail),\n/* harmony export */   sendEmail: () => (/* binding */ sendEmail),\n/* harmony export */   sendPasswordResetEmail: () => (/* binding */ sendPasswordResetEmail),\n/* harmony export */   sendWelcomeEmail: () => (/* binding */ sendWelcomeEmail)\n/* harmony export */ });\n/* harmony import */ var nodemailer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! nodemailer */ \"(rsc)/./node_modules/nodemailer/lib/nodemailer.js\");\n/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../logger */ \"(rsc)/./lib/logger.ts\");\n\n\n// Create a reusable transporter object\nconst createTransporter = ()=>{\n    _logger__WEBPACK_IMPORTED_MODULE_1__.logger.info('Creating email transporter');\n    // Check if SMTP credentials are available\n    const smtpUser = process.env.EMAIL_USER || process.env.SMTP_USER;\n    const smtpPass = process.env.EMAIL_PASS || process.env.SMTP_PASS;\n    if (!smtpUser || !smtpPass) {\n        _logger__WEBPACK_IMPORTED_MODULE_1__.logger.warn('SMTP credentials not configured, using mock transporter');\n        // Return a mock transporter for development\n        return {\n            sendMail: async (options)=>{\n                _logger__WEBPACK_IMPORTED_MODULE_1__.logger.info('📧 Mock email sent', {\n                    to: options.to,\n                    subject: options.subject,\n                    message: 'Email would be sent in production with proper SMTP configuration'\n                });\n                return {\n                    messageId: 'mock-' + Date.now()\n                };\n            },\n            verify: async ()=>{\n                _logger__WEBPACK_IMPORTED_MODULE_1__.logger.info('📧 Mock SMTP verification successful');\n                return true;\n            }\n        };\n    }\n    return nodemailer__WEBPACK_IMPORTED_MODULE_0__.createTransport({\n        host: process.env.EMAIL_HOST || process.env.SMTP_HOST || 'smtp.gmail.com',\n        port: parseInt(process.env.EMAIL_PORT || process.env.SMTP_PORT || '587'),\n        secure: process.env.EMAIL_SECURE === 'true' || process.env.SMTP_SECURE === 'true',\n        auth: {\n            user: smtpUser,\n            pass: smtpPass\n        }\n    });\n};\n/**\n * Send an email\n * \n * @param options - Email options\n * @returns Promise with the result of sending the email\n */ const sendEmail = async (options)=>{\n    try {\n        const { to, subject, text, html, cc, bcc, attachments, from } = options;\n        _logger__WEBPACK_IMPORTED_MODULE_1__.logger.info(`Sending email to ${Array.isArray(to) ? to.join(', ') : to}`, {\n            subject\n        });\n        const transporter = createTransporter();\n        // Check if this is a mock transporter (no SMTP credentials)\n        if (typeof transporter.sendMail !== 'function') {\n            _logger__WEBPACK_IMPORTED_MODULE_1__.logger.warn('Email not sent - SMTP credentials not configured', {\n                to: Array.isArray(to) ? to.join(', ') : to,\n                subject\n            });\n            return true; // Return true to avoid breaking the flow\n        }\n        const mailOptions = {\n            from: from || process.env.EMAIL_FROM || 'noreply@example.com',\n            to,\n            subject,\n            text,\n            html,\n            cc,\n            bcc,\n            attachments\n        };\n        const info = await transporter.sendMail(mailOptions);\n        _logger__WEBPACK_IMPORTED_MODULE_1__.logger.info('Email sent successfully', {\n            messageId: info.messageId\n        });\n        return true;\n    } catch (error) {\n        _logger__WEBPACK_IMPORTED_MODULE_1__.logger.error('Error sending email', {\n            error: error.message\n        });\n        return false;\n    }\n};\n/**\n * Send a booking confirmation email to a user\n */ const sendBookingConfirmationEmail = async (userEmail, userName, bookingDetails)=>{\n    const formattedDate = new Date(bookingDetails.date).toLocaleDateString('en-US', {\n        weekday: 'long',\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n    });\n    const formattedTime = new Date(bookingDetails.date).toLocaleTimeString('en-US', {\n        hour: '2-digit',\n        minute: '2-digit'\n    });\n    const html = `\n    <div style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px; border: 1px solid #eee; border-radius: 5px;\">\n      <h2 style=\"color: #2563eb;\">Your Booking is Confirmed!</h2>\n      <p>Hello ${userName},</p>\n      <p>Thank you for your booking. Here are your booking details:</p>\n      \n      <div style=\"background-color: #f9fafb; padding: 15px; border-radius: 5px; margin: 20px 0;\">\n        <p><strong>Service:</strong> ${bookingDetails.serviceName}</p>\n        <p><strong>Date:</strong> ${formattedDate}</p>\n        <p><strong>Time:</strong> ${formattedTime}</p>\n        <p><strong>Duration:</strong> ${bookingDetails.duration} minutes</p>\n        <p><strong>Price:</strong> $${bookingDetails.price.toFixed(2)}</p>\n        <p><strong>Status:</strong> ${bookingDetails.status.charAt(0).toUpperCase() + bookingDetails.status.slice(1)}</p>\n        ${bookingDetails.agentName ? `<p><strong>Agent:</strong> ${bookingDetails.agentName}</p>` : ''}\n        ${bookingDetails.notes ? `<p><strong>Notes:</strong> ${bookingDetails.notes}</p>` : ''}\n      </div>\n      \n      <p>If you need to modify or cancel your booking, please log in to your account or contact us directly.</p>\n      \n      <div style=\"margin-top: 30px; padding-top: 20px; border-top: 1px solid #eee;\">\n        <p style=\"font-size: 14px; color: #666;\">Thank you for choosing our services!</p>\n      </div>\n    </div>\n  `;\n    return sendEmail({\n        to: userEmail,\n        subject: `Booking Confirmation - #${bookingDetails._id}`,\n        html\n    });\n};\n/**\n * Send a booking notification email to an agent\n */ const sendAgentNotificationEmail = async (agentEmail, agentName, userName, bookingDetails)=>{\n    const formattedDate = new Date(bookingDetails.date).toLocaleDateString('en-US', {\n        weekday: 'long',\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n    });\n    const formattedTime = new Date(bookingDetails.date).toLocaleTimeString('en-US', {\n        hour: '2-digit',\n        minute: '2-digit'\n    });\n    const html = `\n    <div style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px; border: 1px solid #eee; border-radius: 5px;\">\n      <h2 style=\"color: #2563eb;\">New Booking Assigned</h2>\n      <p>Hello ${agentName},</p>\n      <p>A new booking has been assigned to you. Here are the details:</p>\n      \n      <div style=\"background-color: #f9fafb; padding: 15px; border-radius: 5px; margin: 20px 0;\">\n        <p><strong>Client:</strong> ${userName}</p>\n        <p><strong>Service:</strong> ${bookingDetails.serviceName}</p>\n        <p><strong>Date:</strong> ${formattedDate}</p>\n        <p><strong>Time:</strong> ${formattedTime}</p>\n        <p><strong>Duration:</strong> ${bookingDetails.duration} minutes</p>\n        ${bookingDetails.notes ? `<p><strong>Notes:</strong> ${bookingDetails.notes}</p>` : ''}\n      </div>\n      \n      <p>Please log in to your account to review the booking details and confirm your availability.</p>\n      \n      <div style=\"margin-top: 30px; padding-top: 20px; border-top: 1px solid #eee;\">\n        <p style=\"font-size: 14px; color: #666;\">Thank you for your service!</p>\n      </div>\n    </div>\n  `;\n    return sendEmail({\n        to: agentEmail,\n        subject: `New Booking Assigned - #${bookingDetails._id}`,\n        html\n    });\n};\n/**\n * Send a password reset email\n */ const sendPasswordResetEmail = async (userEmail, userName, resetToken, resetUrl)=>{\n    // Use the baseUrl from environment or fallback\n    const baseUrl = process.env.NEXT_PUBLIC_APP_URL || 'http://localhost:3000';\n    const fullResetUrl = resetUrl || `${baseUrl}/reset-password/${resetToken}`;\n    const html = `\n    <div style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px; border: 1px solid #eee; border-radius: 5px;\">\n      <h2 style=\"color: #2563eb;\">Reset Your Password</h2>\n      <p>Hello ${userName},</p>\n      <p>You requested a password reset. Click the button below to reset your password:</p>\n      \n      <div style=\"text-align: center; margin: 30px 0;\">\n        <a href=\"${fullResetUrl}\" style=\"background-color: #2563eb; color: white; padding: 12px 24px; text-decoration: none; border-radius: 4px; display: inline-block; font-weight: bold;\">Reset Password</a>\n      </div>\n      \n      <p>If you didn't request this password reset, you can safely ignore this email.</p>\n      <p>The password reset link will expire in 1 hour.</p>\n      \n      <div style=\"margin-top: 30px; padding-top: 20px; border-top: 1px solid #eee;\">\n        <p style=\"font-size: 14px; color: #666;\">Thank you!</p>\n      </div>\n    </div>\n  `;\n    return sendEmail({\n        to: userEmail,\n        subject: \"Password Reset Request\",\n        html\n    });\n};\n/**\n * Send a welcome email to a new user\n */ const sendWelcomeEmail = async (userEmail, userName)=>{\n    const html = `\n    <div style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px; border: 1px solid #eee; border-radius: 5px;\">\n      <h2 style=\"color: #2563eb;\">Welcome to Civix!</h2>\n      <p>Hello ${userName},</p>\n      <p>Thank you for signing up with Civix. We're excited to have you on board!</p>\n      \n      <p>With your new account, you can:</p>\n      <ul>\n        <li>Browse and book services</li>\n        <li>Track your bookings</li>\n        <li>Manage your profile</li>\n        <li>Get support when you need it</li>\n      </ul>\n      \n      <div style=\"text-align: center; margin: 30px 0;\">\n        <a href=\"${process.env.NEXT_PUBLIC_APP_URL}/services\" style=\"background-color: #2563eb; color: white; padding: 12px 24px; text-decoration: none; border-radius: 4px; display: inline-block; font-weight: bold;\">Explore Services</a>\n      </div>\n      \n      <div style=\"margin-top: 30px; padding-top: 20px; border-top: 1px solid #eee;\">\n        <p style=\"font-size: 14px; color: #666;\">Thank you for choosing Civix!</p>\n      </div>\n    </div>\n  `;\n    return sendEmail({\n        to: userEmail,\n        subject: \"Welcome to Civix!\",\n        html\n    });\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/services/email.ts\n");

/***/ }),

/***/ "(rsc)/./models/User.ts":
/*!************************!*\
  !*** ./models/User.ts ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongoose */ \"mongoose\");\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mongoose__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! bcryptjs */ \"(rsc)/./node_modules/bcryptjs/index.js\");\n\n\n// Settings schemas\nconst NotificationSettingsSchema = new mongoose__WEBPACK_IMPORTED_MODULE_0__.Schema({\n    email: {\n        type: Boolean,\n        default: true\n    },\n    sms: {\n        type: Boolean,\n        default: false\n    },\n    marketing: {\n        type: Boolean,\n        default: false\n    },\n    reminders: {\n        type: Boolean,\n        default: true\n    }\n}, {\n    _id: false\n});\nconst AppearanceSettingsSchema = new mongoose__WEBPACK_IMPORTED_MODULE_0__.Schema({\n    theme: {\n        type: String,\n        enum: [\n            'light',\n            'dark',\n            'system'\n        ],\n        default: 'system'\n    },\n    fontSize: {\n        type: String,\n        enum: [\n            'small',\n            'medium',\n            'large'\n        ],\n        default: 'medium'\n    },\n    reduceAnimations: {\n        type: Boolean,\n        default: false\n    },\n    highContrast: {\n        type: Boolean,\n        default: false\n    }\n}, {\n    _id: false\n});\nconst PrivacySettingsSchema = new mongoose__WEBPACK_IMPORTED_MODULE_0__.Schema({\n    profileVisibility: {\n        type: String,\n        enum: [\n            'public',\n            'contacts',\n            'private'\n        ],\n        default: 'public'\n    },\n    shareBookingHistory: {\n        type: Boolean,\n        default: false\n    },\n    shareContactInfo: {\n        type: Boolean,\n        default: false\n    },\n    allowDataCollection: {\n        type: Boolean,\n        default: true\n    }\n}, {\n    _id: false\n});\nconst UserSettingsSchema = new mongoose__WEBPACK_IMPORTED_MODULE_0__.Schema({\n    notifications: {\n        type: NotificationSettingsSchema,\n        default: ()=>({})\n    },\n    appearance: {\n        type: AppearanceSettingsSchema,\n        default: ()=>({})\n    },\n    privacy: {\n        type: PrivacySettingsSchema,\n        default: ()=>({})\n    }\n}, {\n    _id: false\n});\nconst UserSchema = new mongoose__WEBPACK_IMPORTED_MODULE_0__.Schema({\n    name: {\n        type: String,\n        required: true\n    },\n    email: {\n        type: String,\n        required: true\n    },\n    password: {\n        type: String,\n        required: true\n    },\n    role: {\n        type: String,\n        required: true,\n        enum: [\n            \"USER\",\n            \"AGENT\",\n            \"ADMIN\",\n            \"SUPER_ADMIN\"\n        ],\n        default: \"USER\"\n    },\n    phone: {\n        type: String\n    },\n    address: {\n        type: String\n    },\n    isActive: {\n        type: Boolean,\n        default: true\n    },\n    settings: {\n        type: UserSettingsSchema,\n        default: ()=>({})\n    },\n    lastLogin: {\n        type: Date\n    },\n    resetPasswordToken: {\n        type: String\n    },\n    resetPasswordExpires: {\n        type: Date\n    }\n}, {\n    timestamps: true\n});\n// Hash password before saving\nUserSchema.pre(\"save\", async function(next) {\n    if (!this.isModified(\"password\")) return next();\n    try {\n        const salt = await bcryptjs__WEBPACK_IMPORTED_MODULE_1__[\"default\"].genSalt(10);\n        this.password = await bcryptjs__WEBPACK_IMPORTED_MODULE_1__[\"default\"].hash(this.password, salt);\n        next();\n    } catch (error) {\n        next(error);\n    }\n});\n// Compare password method\nUserSchema.methods.comparePassword = async function(candidatePassword) {\n    return bcryptjs__WEBPACK_IMPORTED_MODULE_1__[\"default\"].compare(candidatePassword, this.password);\n};\n// Only run indexing on server side to avoid browser warnings\nif (true) {\n    // Create indexes for better query performance\n    UserSchema.index({\n        email: 1\n    }, {\n        unique: true\n    });\n    UserSchema.index({\n        role: 1\n    });\n    UserSchema.index({\n        resetPasswordToken: 1\n    });\n}\n// Prevent model compilation error in development due to hot reloading\nlet User;\nif ((mongoose__WEBPACK_IMPORTED_MODULE_0___default().models) && (mongoose__WEBPACK_IMPORTED_MODULE_0___default().models).User) {\n    User = (mongoose__WEBPACK_IMPORTED_MODULE_0___default().models).User;\n} else {\n    User = mongoose__WEBPACK_IMPORTED_MODULE_0___default().model(\"User\", UserSchema);\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (User);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./models/User.ts\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fauth%2Fregister%2Froute&page=%2Fapi%2Fauth%2Fregister%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fauth%2Fregister%2Froute.ts&appDir=%2FUsers%2Fmacbook%2FDesktop%2Fpersonal-workspace%2Fcivix%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fmacbook%2FDesktop%2Fpersonal-workspace%2Fcivix&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fauth%2Fregister%2Froute&page=%2Fapi%2Fauth%2Fregister%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fauth%2Fregister%2Froute.ts&appDir=%2FUsers%2Fmacbook%2FDesktop%2Fpersonal-workspace%2Fcivix%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fmacbook%2FDesktop%2Fpersonal-workspace%2Fcivix&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   handler: () => (/* binding */ handler),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/server/request-meta */ \"(rsc)/./node_modules/next/dist/server/request-meta.js\");\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/dist/server/lib/trace/tracer */ \"(rsc)/./node_modules/next/dist/server/lib/trace/tracer.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/dist/shared/lib/router/utils/app-paths */ \"next/dist/shared/lib/router/utils/app-paths\");\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/dist/server/base-http/node */ \"(rsc)/./node_modules/next/dist/server/base-http/node.js\");\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! next/dist/server/web/spec-extension/adapters/next-request */ \"(rsc)/./node_modules/next/dist/server/web/spec-extension/adapters/next-request.js\");\n/* harmony import */ var next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! next/dist/server/lib/trace/constants */ \"(rsc)/./node_modules/next/dist/server/lib/trace/constants.js\");\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! next/dist/server/instrumentation/utils */ \"(rsc)/./node_modules/next/dist/server/instrumentation/utils.js\");\n/* harmony import */ var next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! next/dist/server/send-response */ \"(rsc)/./node_modules/next/dist/server/send-response.js\");\n/* harmony import */ var next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! next/dist/server/web/utils */ \"(rsc)/./node_modules/next/dist/server/web/utils.js\");\n/* harmony import */ var next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! next/dist/server/lib/cache-control */ \"(rsc)/./node_modules/next/dist/server/lib/cache-control.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! next/dist/lib/constants */ \"(rsc)/./node_modules/next/dist/lib/constants.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__);\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! next/dist/shared/lib/no-fallback-error.external */ \"next/dist/shared/lib/no-fallback-error.external\");\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__);\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! next/dist/server/response-cache */ \"(rsc)/./node_modules/next/dist/server/response-cache/index.js\");\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__);\n/* harmony import */ var _Users_macbook_Desktop_personal_workspace_civix_app_api_auth_register_route_ts__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./app/api/auth/register/route.ts */ \"(rsc)/./app/api/auth/register/route.ts\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"standalone\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/auth/register/route\",\n        pathname: \"/api/auth/register\",\n        filename: \"route\",\n        bundlePath: \"app/api/auth/register/route\"\n    },\n    distDir: \".next\" || 0,\n    projectDir:  false || '',\n    resolvedPagePath: \"/Users/macbook/Desktop/personal-workspace/civix/app/api/auth/register/route.ts\",\n    nextConfigOutput,\n    userland: _Users_macbook_Desktop_personal_workspace_civix_app_api_auth_register_route_ts__WEBPACK_IMPORTED_MODULE_16__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\nasync function handler(req, res, ctx) {\n    var _nextConfig_experimental;\n    let srcPage = \"/api/auth/register/route\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (false) {} else if (srcPage === '/index') {\n        // we always normalize /index specifically\n        srcPage = '/';\n    }\n    const multiZoneDraftMode = \"false\";\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage,\n        multiZoneDraftMode\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return null;\n    }\n    const { buildId, params, nextConfig, isDraftMode, prerenderManifest, routerServerContext, isOnDemandRevalidate, revalidateOnlyGenerated, resolvedPathname } = prepareResult;\n    const normalizedSrcPage = (0,next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__.normalizeAppPath)(srcPage);\n    let isIsr = Boolean(prerenderManifest.dynamicRoutes[normalizedSrcPage] || prerenderManifest.routes[resolvedPathname]);\n    if (isIsr && !isDraftMode) {\n        const isPrerendered = Boolean(prerenderManifest.routes[resolvedPathname]);\n        const prerenderInfo = prerenderManifest.dynamicRoutes[normalizedSrcPage];\n        if (prerenderInfo) {\n            if (prerenderInfo.fallback === false && !isPrerendered) {\n                throw new next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__.NoFallbackError();\n            }\n        }\n    }\n    let cacheKey = null;\n    if (isIsr && !routeModule.isDev && !isDraftMode) {\n        cacheKey = resolvedPathname;\n        // ensure /index and / is normalized to one key\n        cacheKey = cacheKey === '/index' ? '/' : cacheKey;\n    }\n    const supportsDynamicResponse = // If we're in development, we always support dynamic HTML\n    routeModule.isDev === true || // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isIsr;\n    // This is a revalidation request if the request is for a static\n    // page and it is not being resumed from a postponed render and\n    // it is not a dynamic RSC request then it is a revalidation\n    // request.\n    const isRevalidate = isIsr && !supportsDynamicResponse;\n    const method = req.method || 'GET';\n    const tracer = (0,next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__.getTracer)();\n    const activeSpan = tracer.getActiveScopeSpan();\n    const context = {\n        params,\n        prerenderManifest,\n        renderOpts: {\n            experimental: {\n                dynamicIO: Boolean(nextConfig.experimental.dynamicIO),\n                authInterrupts: Boolean(nextConfig.experimental.authInterrupts)\n            },\n            supportsDynamicResponse,\n            incrementalCache: (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'incrementalCache'),\n            cacheLifeProfiles: (_nextConfig_experimental = nextConfig.experimental) == null ? void 0 : _nextConfig_experimental.cacheLife,\n            isRevalidate,\n            waitUntil: ctx.waitUntil,\n            onClose: (cb)=>{\n                res.on('close', cb);\n            },\n            onAfterTaskError: undefined,\n            onInstrumentationRequestError: (error, _request, errorContext)=>routeModule.onRequestError(req, error, errorContext, routerServerContext)\n        },\n        sharedContext: {\n            buildId\n        }\n    };\n    const nodeNextReq = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__.NodeNextRequest(req);\n    const nodeNextRes = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__.NodeNextResponse(res);\n    const nextReq = next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__.NextRequestAdapter.fromNodeNextRequest(nodeNextReq, (0,next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__.signalFromNodeResponse)(res));\n    try {\n        const invokeRouteModule = async (span)=>{\n            return routeModule.handle(nextReq, context).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__.BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        };\n        const handleResponse = async (currentSpan)=>{\n            var _cacheEntry_value;\n            const responseGenerator = async ({ previousCacheEntry })=>{\n                try {\n                    if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode') && isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry) {\n                        res.statusCode = 404;\n                        // on-demand revalidate always sets this header\n                        res.setHeader('x-nextjs-cache', 'REVALIDATED');\n                        res.end('This page could not be found');\n                        return null;\n                    }\n                    const response = await invokeRouteModule(currentSpan);\n                    req.fetchMetrics = context.renderOpts.fetchMetrics;\n                    let pendingWaitUntil = context.renderOpts.pendingWaitUntil;\n                    // Attempt using provided waitUntil if available\n                    // if it's not we fallback to sendResponse's handling\n                    if (pendingWaitUntil) {\n                        if (ctx.waitUntil) {\n                            ctx.waitUntil(pendingWaitUntil);\n                            pendingWaitUntil = undefined;\n                        }\n                    }\n                    const cacheTags = context.renderOpts.collectedTags;\n                    // If the request is for a static response, we can cache it so long\n                    // as it's not edge.\n                    if (isIsr) {\n                        const blob = await response.blob();\n                        // Copy the headers from the response.\n                        const headers = (0,next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__.toNodeOutgoingHttpHeaders)(response.headers);\n                        if (cacheTags) {\n                            headers[next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.NEXT_CACHE_TAGS_HEADER] = cacheTags;\n                        }\n                        if (!headers['content-type'] && blob.type) {\n                            headers['content-type'] = blob.type;\n                        }\n                        const revalidate = typeof context.renderOpts.collectedRevalidate === 'undefined' || context.renderOpts.collectedRevalidate >= next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.INFINITE_CACHE ? false : context.renderOpts.collectedRevalidate;\n                        const expire = typeof context.renderOpts.collectedExpire === 'undefined' || context.renderOpts.collectedExpire >= next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.INFINITE_CACHE ? undefined : context.renderOpts.collectedExpire;\n                        // Create the cache entry for the response.\n                        const cacheEntry = {\n                            value: {\n                                kind: next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__.CachedRouteKind.APP_ROUTE,\n                                status: response.status,\n                                body: Buffer.from(await blob.arrayBuffer()),\n                                headers\n                            },\n                            cacheControl: {\n                                revalidate,\n                                expire\n                            }\n                        };\n                        return cacheEntry;\n                    } else {\n                        // send response without caching if not ISR\n                        await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, response, context.renderOpts.pendingWaitUntil);\n                        return null;\n                    }\n                } catch (err) {\n                    // if this is a background revalidate we need to report\n                    // the request error here as it won't be bubbled\n                    if (previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) {\n                        await routeModule.onRequestError(req, err, {\n                            routerKind: 'App Router',\n                            routePath: srcPage,\n                            routeType: 'route',\n                            revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__.getRevalidateReason)({\n                                isRevalidate,\n                                isOnDemandRevalidate\n                            })\n                        }, routerServerContext);\n                    }\n                    throw err;\n                }\n            };\n            const cacheEntry = await routeModule.handleResponse({\n                req,\n                nextConfig,\n                cacheKey,\n                routeKind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n                isFallback: false,\n                prerenderManifest,\n                isRoutePPREnabled: false,\n                isOnDemandRevalidate,\n                revalidateOnlyGenerated,\n                responseGenerator,\n                waitUntil: ctx.waitUntil\n            });\n            // we don't create a cacheEntry for ISR\n            if (!isIsr) {\n                return null;\n            }\n            if ((cacheEntry == null ? void 0 : (_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__.CachedRouteKind.APP_ROUTE) {\n                var _cacheEntry_value1;\n                throw Object.defineProperty(new Error(`Invariant: app-route received invalid cache entry ${cacheEntry == null ? void 0 : (_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E701\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode')) {\n                res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n            }\n            // Draft mode should never be cached\n            if (isDraftMode) {\n                res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            }\n            const headers = (0,next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__.fromNodeOutgoingHttpHeaders)(cacheEntry.value.headers);\n            if (!((0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode') && isIsr)) {\n                headers.delete(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.NEXT_CACHE_TAGS_HEADER);\n            }\n            // If cache control is already set on the response we don't\n            // override it to allow users to customize it via next.config\n            if (cacheEntry.cacheControl && !res.getHeader('Cache-Control') && !headers.get('Cache-Control')) {\n                headers.set('Cache-Control', (0,next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_12__.getCacheControlHeader)(cacheEntry.cacheControl));\n            }\n            await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, new Response(cacheEntry.value.body, {\n                headers,\n                status: cacheEntry.value.status || 200\n            }));\n            return null;\n        };\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await handleResponse(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__.BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__.SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, handleResponse));\n        }\n    } catch (err) {\n        // if we aren't wrapped by base-server handle here\n        if (!activeSpan) {\n            await routeModule.onRequestError(req, err, {\n                routerKind: 'App Router',\n                routePath: normalizedSrcPage,\n                routeType: 'route',\n                revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__.getRevalidateReason)({\n                    isRevalidate,\n                    isOnDemandRevalidate\n                })\n            });\n        }\n        // rethrow so that we can handle serving error page\n        // If this is during static generation, throw the error again.\n        if (isIsr) throw err;\n        // Otherwise, send a 500 response.\n        await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, new Response(null, {\n            status: 500\n        }));\n        return null;\n    }\n}\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fauth%2Fregister%2Froute&page=%2Fapi%2Fauth%2Fregister%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fauth%2Fregister%2Froute.ts&appDir=%2FUsers%2Fmacbook%2FDesktop%2Fpersonal-workspace%2Fcivix%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fmacbook%2FDesktop%2Fpersonal-workspace%2Fcivix&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "./work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "child_process":
/*!********************************!*\
  !*** external "child_process" ***!
  \********************************/
/***/ ((module) => {

"use strict";
module.exports = require("child_process");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "dns":
/*!**********************!*\
  !*** external "dns" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("dns");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("events");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("fs");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("https");

/***/ }),

/***/ "mongoose":
/*!***************************!*\
  !*** external "mongoose" ***!
  \***************************/
/***/ ((module) => {

"use strict";
module.exports = require("mongoose");

/***/ }),

/***/ "net":
/*!**********************!*\
  !*** external "net" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("net");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "next/dist/shared/lib/no-fallback-error.external":
/*!******************************************************************!*\
  !*** external "next/dist/shared/lib/no-fallback-error.external" ***!
  \******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/no-fallback-error.external");

/***/ }),

/***/ "next/dist/shared/lib/router/utils/app-paths":
/*!**************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/app-paths" ***!
  \**************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/app-paths");

/***/ }),

/***/ "os":
/*!*********************!*\
  !*** external "os" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("os");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("path");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ "tls":
/*!**********************!*\
  !*** external "tls" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("tls");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("util");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@opentelemetry","vendor-chunks/nodemailer","vendor-chunks/bcryptjs"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fauth%2Fregister%2Froute&page=%2Fapi%2Fauth%2Fregister%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fauth%2Fregister%2Froute.ts&appDir=%2FUsers%2Fmacbook%2FDesktop%2Fpersonal-workspace%2Fcivix%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fmacbook%2FDesktop%2Fpersonal-workspace%2Fcivix&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!")));
module.exports = __webpack_exports__;

})();